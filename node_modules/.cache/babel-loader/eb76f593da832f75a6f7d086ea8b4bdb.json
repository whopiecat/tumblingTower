{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { _TypeStore } from '../../../Misc/typeStore';\nimport { InputBlock } from './Input/inputBlock';\nimport \"../../../Shaders/ShadersInclude/fresnelFunction\";\nimport { ViewDirectionBlock } from './viewDirectionBlock';\n/**\r\n * Block used to compute fresnel value\r\n */\n\nvar FresnelBlock =\n/** @class */\nfunction (_super) {\n  __extends(FresnelBlock, _super);\n  /**\r\n   * Create a new FresnelBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function FresnelBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"worldNormal\", NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this.registerInput(\"viewDirection\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerInput(\"bias\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerInput(\"power\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"fresnel\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  FresnelBlock.prototype.getClassName = function () {\n    return \"FresnelBlock\";\n  };\n\n  Object.defineProperty(FresnelBlock.prototype, \"worldNormal\", {\n    /**\r\n     * Gets the world normal input component\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FresnelBlock.prototype, \"viewDirection\", {\n    /**\r\n    * Gets the view direction input component\r\n    */\n    get: function () {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FresnelBlock.prototype, \"bias\", {\n    /**\r\n    * Gets the bias input component\r\n    */\n    get: function () {\n      return this._inputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FresnelBlock.prototype, \"power\", {\n    /**\r\n    * Gets the camera (or eye) position component\r\n    */\n    get: function () {\n      return this._inputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FresnelBlock.prototype, \"fresnel\", {\n    /**\r\n     * Gets the fresnel output component\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FresnelBlock.prototype.autoConfigure = function (material) {\n    if (!this.viewDirection.isConnected) {\n      var viewDirectionInput = new ViewDirectionBlock(\"View direction\");\n      viewDirectionInput.output.connectTo(this.viewDirection);\n      viewDirectionInput.autoConfigure(material);\n    }\n\n    if (!this.bias.isConnected) {\n      var biasInput = new InputBlock(\"bias\");\n      biasInput.value = 0;\n      biasInput.output.connectTo(this.bias);\n    }\n\n    if (!this.power.isConnected) {\n      var powerInput = new InputBlock(\"power\");\n      powerInput.value = 1;\n      powerInput.output.connectTo(this.power);\n    }\n  };\n\n  FresnelBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var comments = \"//\" + this.name;\n\n    state._emitFunctionFromInclude(\"fresnelFunction\", comments, {\n      removeIfDef: true\n    });\n\n    state.compilationString += this._declareOutput(this.fresnel, state) + (\" = computeFresnelTerm(\" + this.viewDirection.associatedVariableName + \".xyz, \" + this.worldNormal.associatedVariableName + \".xyz, \" + this.bias.associatedVariableName + \", \" + this.power.associatedVariableName + \");\\r\\n\");\n    return this;\n  };\n\n  return FresnelBlock;\n}(NodeMaterialBlock);\n\nexport { FresnelBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.FresnelBlock\"] = FresnelBlock;","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Blocks/fresnelBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../nodeMaterialBuildState';\r\nimport { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';\r\nimport { _TypeStore } from '../../../Misc/typeStore';\r\nimport { InputBlock } from './Input/inputBlock';\r\nimport { NodeMaterial } from '../nodeMaterial';\r\n\r\nimport \"../../../Shaders/ShadersInclude/fresnelFunction\";\r\nimport { ViewDirectionBlock } from './viewDirectionBlock';\r\n\r\n/**\r\n * Block used to compute fresnel value\r\n */\r\nexport class FresnelBlock extends NodeMaterialBlock {\r\n\r\n    /**\r\n     * Create a new FresnelBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"worldNormal\", NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this.registerInput(\"viewDirection\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerInput(\"bias\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerInput(\"power\", NodeMaterialBlockConnectionPointTypes.Float);\r\n\r\n        this.registerOutput(\"fresnel\", NodeMaterialBlockConnectionPointTypes.Float);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"FresnelBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the world normal input component\r\n     */\r\n    public get worldNormal(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n    * Gets the view direction input component\r\n    */\r\n    public get viewDirection(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n    * Gets the bias input component\r\n    */\r\n    public get bias(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n    * Gets the camera (or eye) position component\r\n    */\r\n    public get power(): NodeMaterialConnectionPoint {\r\n        return this._inputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the fresnel output component\r\n     */\r\n    public get fresnel(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    public autoConfigure(material: NodeMaterial) {\r\n        if (!this.viewDirection.isConnected) {\r\n            let viewDirectionInput = new ViewDirectionBlock(\"View direction\");\r\n            viewDirectionInput.output.connectTo(this.viewDirection);\r\n            viewDirectionInput.autoConfigure(material);\r\n        }\r\n\r\n        if (!this.bias.isConnected) {\r\n            let biasInput = new InputBlock(\"bias\");\r\n            biasInput.value = 0;\r\n            biasInput.output.connectTo(this.bias);\r\n        }\r\n\r\n        if (!this.power.isConnected) {\r\n            let powerInput = new InputBlock(\"power\");\r\n            powerInput.value = 1;\r\n            powerInput.output.connectTo(this.power);\r\n        }\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        let comments = `//${this.name}`;\r\n\r\n        state._emitFunctionFromInclude(\"fresnelFunction\", comments, {removeIfDef: true});\r\n\r\n        state.compilationString += this._declareOutput(this.fresnel, state) + ` = computeFresnelTerm(${this.viewDirection.associatedVariableName}.xyz, ${this.worldNormal.associatedVariableName}.xyz, ${this.bias.associatedVariableName}, ${this.power.associatedVariableName});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.FresnelBlock\"] = FresnelBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}