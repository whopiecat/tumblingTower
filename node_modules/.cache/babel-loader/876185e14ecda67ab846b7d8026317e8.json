{"ast":null,"code":"/**\r\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\r\n * Babylon.js\r\n */\nvar DomManagement =\n/** @class */\nfunction () {\n  function DomManagement() {}\n  /**\r\n   * Checks if the window object exists\r\n   * @returns true if the window object exists\r\n   */\n\n\n  DomManagement.IsWindowObjectExist = function () {\n    return typeof window !== \"undefined\";\n  };\n  /**\r\n   * Checks if the navigator object exists\r\n   * @returns true if the navigator object exists\r\n   */\n\n\n  DomManagement.IsNavigatorAvailable = function () {\n    return typeof navigator !== \"undefined\";\n  };\n  /**\r\n   * Check if the document object exists\r\n   * @returns true if the document object exists\r\n   */\n\n\n  DomManagement.IsDocumentAvailable = function () {\n    return typeof document !== \"undefined\";\n  };\n  /**\r\n   * Extracts text content from a DOM element hierarchy\r\n   * @param element defines the root element\r\n   * @returns a string\r\n   */\n\n\n  DomManagement.GetDOMTextContent = function (element) {\n    var result = \"\";\n    var child = element.firstChild;\n\n    while (child) {\n      if (child.nodeType === 3) {\n        result += child.textContent;\n      }\n\n      child = child.nextSibling;\n    }\n\n    return result;\n  };\n\n  return DomManagement;\n}();\n\nexport { DomManagement };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/domManagement.ts"],"names":[],"mappings":"AAAA;;;;AAIA,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CA2CC;AA1CG;;;;;;AAIc,EAAA,aAAA,CAAA,mBAAA,GAAd,YAAA;AACI,WAAQ,OAAO,MAAR,KAAoB,WAA3B;AACH,GAFa;AAId;;;;;;AAIc,EAAA,aAAA,CAAA,oBAAA,GAAd,YAAA;AACI,WAAQ,OAAO,SAAR,KAAuB,WAA9B;AACH,GAFa;AAId;;;;;;AAIc,EAAA,aAAA,CAAA,mBAAA,GAAd,YAAA;AACI,WAAQ,OAAO,QAAR,KAAsB,WAA7B;AACH,GAFa;AAId;;;;;;;AAKc,EAAA,aAAA,CAAA,iBAAA,GAAd,UAAgC,OAAhC,EAAoD;AAChD,QAAI,MAAM,GAAG,EAAb;AACA,QAAI,KAAK,GAAG,OAAO,CAAC,UAApB;;AAEA,WAAO,KAAP,EAAc;AACV,UAAI,KAAK,CAAC,QAAN,KAAmB,CAAvB,EAA0B;AACtB,QAAA,MAAM,IAAI,KAAK,CAAC,WAAhB;AACH;;AACD,MAAA,KAAK,GAAS,KAAK,CAAC,WAApB;AACH;;AAED,WAAO,MAAP;AACH,GAZa;;AAalB,SAAA,aAAA;AAAC,CA3CD,EAAA","sourcesContent":["/**\r\n * Sets of helpers dealing with the DOM and some of the recurrent functions needed in\r\n * Babylon.js\r\n */\r\nexport class DomManagement {\r\n    /**\r\n     * Checks if the window object exists\r\n     * @returns true if the window object exists\r\n     */\r\n    public static IsWindowObjectExist(): boolean {\r\n        return (typeof window) !== \"undefined\";\r\n    }\r\n\r\n    /**\r\n     * Checks if the navigator object exists\r\n     * @returns true if the navigator object exists\r\n     */\r\n    public static IsNavigatorAvailable(): boolean {\r\n        return (typeof navigator) !== \"undefined\";\r\n    }\r\n\r\n    /**\r\n     * Check if the document object exists\r\n     * @returns true if the document object exists\r\n     */\r\n    public static IsDocumentAvailable(): boolean {\r\n        return (typeof document) !== \"undefined\";\r\n    }\r\n\r\n    /**\r\n     * Extracts text content from a DOM element hierarchy\r\n     * @param element defines the root element\r\n     * @returns a string\r\n     */\r\n    public static GetDOMTextContent(element: HTMLElement): string {\r\n        var result = \"\";\r\n        var child = element.firstChild;\r\n\r\n        while (child) {\r\n            if (child.nodeType === 3) {\r\n                result += child.textContent;\r\n            }\r\n            child = <any>(child.nextSibling);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}