{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\n/**\r\n * Block used to expand a Color3/4 into 4 outputs (one for each component)\r\n */\n\nvar ColorSplitterBlock =\n/** @class */\nfunction (_super) {\n  __extends(ColorSplitterBlock, _super);\n  /**\r\n   * Create a new ColorSplitterBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function ColorSplitterBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4, true);\n\n    _this.registerInput(\"rgb \", NodeMaterialBlockConnectionPointTypes.Color3, true);\n\n    _this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this.registerOutput(\"r\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"g\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"b\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"a\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.inputsAreExclusive = true;\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  ColorSplitterBlock.prototype.getClassName = function () {\n    return \"ColorSplitterBlock\";\n  };\n\n  Object.defineProperty(ColorSplitterBlock.prototype, \"rgba\", {\n    /**\r\n     * Gets the rgba component (input)\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"rgbIn\", {\n    /**\r\n     * Gets the rgb component (input)\r\n     */\n    get: function () {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"rgbOut\", {\n    /**\r\n     * Gets the rgb component (output)\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"r\", {\n    /**\r\n     * Gets the r component (output)\r\n     */\n    get: function () {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"g\", {\n    /**\r\n     * Gets the g component (output)\r\n     */\n    get: function () {\n      return this._outputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"b\", {\n    /**\r\n     * Gets the b component (output)\r\n     */\n    get: function () {\n      return this._outputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColorSplitterBlock.prototype, \"a\", {\n    /**\r\n     * Gets the a component (output)\r\n     */\n    get: function () {\n      return this._outputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ColorSplitterBlock.prototype._inputRename = function (name) {\n    if (name === \"rgb \") {\n      return \"rgbIn\";\n    }\n\n    return name;\n  };\n\n  ColorSplitterBlock.prototype._outputRename = function (name) {\n    if (name === \"rgb\") {\n      return \"rgbOut\";\n    }\n\n    return name;\n  };\n\n  ColorSplitterBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var input = this.rgba.isConnected ? this.rgba : this.rgbIn;\n\n    if (!input.isConnected) {\n      return;\n    }\n\n    var rgbOutput = this._outputs[0];\n    var rOutput = this._outputs[1];\n    var gOutput = this._outputs[2];\n    var bOutput = this._outputs[3];\n    var aOutput = this._outputs[4];\n\n    if (rgbOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(rgbOutput, state) + (\" = \" + input.associatedVariableName + \".rgb;\\r\\n\");\n    }\n\n    if (rOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(rOutput, state) + (\" = \" + input.associatedVariableName + \".r;\\r\\n\");\n    }\n\n    if (gOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(gOutput, state) + (\" = \" + input.associatedVariableName + \".g;\\r\\n\");\n    }\n\n    if (bOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(bOutput, state) + (\" = \" + input.associatedVariableName + \".b;\\r\\n\");\n    }\n\n    if (aOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(aOutput, state) + (\" = \" + input.associatedVariableName + \".a;\\r\\n\");\n    }\n\n    return this;\n  };\n\n  return ColorSplitterBlock;\n}(NodeMaterialBlock);\n\nexport { ColorSplitterBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.ColorSplitterBlock\"] = ColorSplitterBlock;","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Blocks/colorSplitterBlock.ts"],"names":[],"mappings":";AAAA,SAAS,iBAAT,QAAkC,sBAAlC;AACA,SAAS,qCAAT,QAAsD,gDAAtD;AAEA,SAAS,wBAAT,QAAyC,mCAAzC;AAEA,SAAS,UAAT,QAA2B,yBAA3B;AAEA;;;;AAGA,IAAA,kBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;AAEpC;;;;;;AAIA,WAAA,kBAAA,CAAmB,IAAnB,EAA+B;AAA/B,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,wBAAwB,CAAC,OAArC,KAA6C,IADjD;;AAGI,IAAA,KAAI,CAAC,aAAL,CAAmB,MAAnB,EAA2B,qCAAqC,CAAC,MAAjE,EAAyE,IAAzE;;AACA,IAAA,KAAI,CAAC,aAAL,CAAmB,MAAnB,EAA2B,qCAAqC,CAAC,MAAjE,EAAyE,IAAzE;;AAEA,IAAA,KAAI,CAAC,cAAL,CAAoB,KAApB,EAA2B,qCAAqC,CAAC,MAAjE;;AACA,IAAA,KAAI,CAAC,cAAL,CAAoB,GAApB,EAAyB,qCAAqC,CAAC,KAA/D;;AACA,IAAA,KAAI,CAAC,cAAL,CAAoB,GAApB,EAAyB,qCAAqC,CAAC,KAA/D;;AACA,IAAA,KAAI,CAAC,cAAL,CAAoB,GAApB,EAAyB,qCAAqC,CAAC,KAA/D;;AACA,IAAA,KAAI,CAAC,cAAL,CAAoB,GAApB,EAAyB,qCAAqC,CAAC,KAA/D;;AAEA,IAAA,KAAI,CAAC,kBAAL,GAA0B,IAA1B;;AACH;AAED;;;;;;AAIO,EAAA,kBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,oBAAP;AACH,GAFM;;AAOP,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,MAAX,EAAe;AAHf;;;SAGA,YAAA;AACI,aAAO,KAAK,OAAL,CAAa,CAAb,CAAP;AACH,KAFc;qBAAA;;AAAA,GAAf;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA,YAAA;AACI,aAAO,KAAK,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAMA,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAMA,EAAA,MAAA,CAAA,cAAA,CAAW,kBAAA,CAAA,SAAX,EAAW,GAAX,EAAY;AAHZ;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH,KAFW;qBAAA;;AAAA,GAAZ;;AAIU,EAAA,kBAAA,CAAA,SAAA,CAAA,YAAA,GAAV,UAAuB,IAAvB,EAAmC;AAC/B,QAAI,IAAI,KAAK,MAAb,EAAqB;AACjB,aAAO,OAAP;AACH;;AACD,WAAO,IAAP;AACH,GALS;;AAOA,EAAA,kBAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,IAAxB,EAAoC;AAChC,QAAI,IAAI,KAAK,KAAb,EAAoB;AAChB,aAAO,QAAP;AACH;;AACD,WAAO,IAAP;AACH,GALS;;AAOA,EAAA,kBAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAmD;AAC/C,IAAA,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,EAAkB,KAAlB;;AAEA,QAAI,KAAK,GAAG,KAAK,IAAL,CAAU,WAAV,GAAwB,KAAK,IAA7B,GAAoC,KAAK,KAArD;;AAEA,QAAI,CAAC,KAAK,CAAC,WAAX,EAAwB;AACpB;AACH;;AAED,QAAI,SAAS,GAAG,KAAK,QAAL,CAAc,CAAd,CAAhB;AACA,QAAI,OAAO,GAAG,KAAK,QAAL,CAAc,CAAd,CAAd;AACA,QAAI,OAAO,GAAG,KAAK,QAAL,CAAc,CAAd,CAAd;AACA,QAAI,OAAO,GAAG,KAAK,QAAL,CAAc,CAAd,CAAd;AACA,QAAI,OAAO,GAAG,KAAK,QAAL,CAAc,CAAd,CAAd;;AAEA,QAAI,SAAS,CAAC,YAAd,EAA4B;AACxB,MAAA,KAAK,CAAC,iBAAN,IAA2B,KAAK,cAAL,CAAoB,SAApB,EAA+B,KAA/B,KAAwC,QAAM,KAAK,CAAC,sBAAZ,GAAkC,WAA1E,CAA3B;AACH;;AACD,QAAI,OAAO,CAAC,YAAZ,EAA0B;AACtB,MAAA,KAAK,CAAC,iBAAN,IAA2B,KAAK,cAAL,CAAoB,OAApB,EAA6B,KAA7B,KAAsC,QAAM,KAAK,CAAC,sBAAZ,GAAkC,SAAxE,CAA3B;AACH;;AACD,QAAI,OAAO,CAAC,YAAZ,EAA0B;AACtB,MAAA,KAAK,CAAC,iBAAN,IAA2B,KAAK,cAAL,CAAoB,OAApB,EAA6B,KAA7B,KAAsC,QAAM,KAAK,CAAC,sBAAZ,GAAkC,SAAxE,CAA3B;AACH;;AACD,QAAI,OAAO,CAAC,YAAZ,EAA0B;AACtB,MAAA,KAAK,CAAC,iBAAN,IAA2B,KAAK,cAAL,CAAoB,OAApB,EAA6B,KAA7B,KAAsC,QAAM,KAAK,CAAC,sBAAZ,GAAkC,SAAxE,CAA3B;AACH;;AACD,QAAI,OAAO,CAAC,YAAZ,EAA0B;AACtB,MAAA,KAAK,CAAC,iBAAN,IAA2B,KAAK,cAAL,CAAoB,OAApB,EAA6B,KAA7B,KAAsC,QAAM,KAAK,CAAC,sBAAZ,GAAkC,SAAxE,CAA3B;AACH;;AAED,WAAO,IAAP;AACH,GAhCS;;AAiCd,SAAA,kBAAA;AAAC,CA3HD,CAAwC,iBAAxC,CAAA;;;AA6HA,UAAU,CAAC,eAAX,CAA2B,4BAA3B,IAA2D,kBAA3D","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../nodeMaterialBuildState';\r\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\r\nimport { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';\r\nimport { _TypeStore } from '../../../Misc/typeStore';\r\n\r\n/**\r\n * Block used to expand a Color3/4 into 4 outputs (one for each component)\r\n */\r\nexport class ColorSplitterBlock extends NodeMaterialBlock {\r\n\r\n    /**\r\n     * Create a new ColorSplitterBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4, true);\r\n        this.registerInput(\"rgb \", NodeMaterialBlockConnectionPointTypes.Color3, true);\r\n\r\n        this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this.registerOutput(\"r\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"g\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"b\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"a\", NodeMaterialBlockConnectionPointTypes.Float);\r\n\r\n        this.inputsAreExclusive = true;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ColorSplitterBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the rgba component (input)\r\n     */\r\n    public get rgba(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the rgb component (input)\r\n     */\r\n    public get rgbIn(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the rgb component (output)\r\n     */\r\n    public get rgbOut(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the r component (output)\r\n     */\r\n    public get r(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the g component (output)\r\n     */\r\n    public get g(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n    /**\r\n     * Gets the b component (output)\r\n     */\r\n    public get b(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n    /**\r\n     * Gets the a component (output)\r\n     */\r\n    public get a(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    protected _inputRename(name: string) {\r\n        if (name === \"rgb \") {\r\n            return \"rgbIn\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    protected _outputRename(name: string) {\r\n        if (name === \"rgb\") {\r\n            return \"rgbOut\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        let input = this.rgba.isConnected ? this.rgba : this.rgbIn;\r\n\r\n        if (!input.isConnected) {\r\n            return;\r\n        }\r\n\r\n        let rgbOutput = this._outputs[0];\r\n        let rOutput = this._outputs[1];\r\n        let gOutput = this._outputs[2];\r\n        let bOutput = this._outputs[3];\r\n        let aOutput = this._outputs[4];\r\n\r\n        if (rgbOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(rgbOutput, state) + ` = ${input.associatedVariableName}.rgb;\\r\\n`;\r\n        }\r\n        if (rOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(rOutput, state) + ` = ${input.associatedVariableName}.r;\\r\\n`;\r\n        }\r\n        if (gOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(gOutput, state) + ` = ${input.associatedVariableName}.g;\\r\\n`;\r\n        }\r\n        if (bOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(bOutput, state) + ` = ${input.associatedVariableName}.b;\\r\\n`;\r\n        }\r\n        if (aOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(aOutput, state) + ` = ${input.associatedVariableName}.a;\\r\\n`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.ColorSplitterBlock\"] = ColorSplitterBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}