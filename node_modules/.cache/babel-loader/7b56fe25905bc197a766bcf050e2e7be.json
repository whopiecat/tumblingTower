{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { FreeCamera } from \"./freeCamera\";\nimport { Vector3 } from \"../Maths/math.vector\";\nimport { Node } from \"../node\";\nimport \"./Inputs/freeCameraVirtualJoystickInput\";\nNode.AddNodeConstructor(\"VirtualJoysticksCamera\", function (name, scene) {\n  return function () {\n    return new VirtualJoysticksCamera(name, Vector3.Zero(), scene);\n  };\n});\n/**\r\n * This represents a free type of camera. It can be useful in First Person Shooter game for instance.\r\n * It is identical to the Free Camera and simply adds by default a virtual joystick.\r\n * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\r\n * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\r\n */\n\nvar VirtualJoysticksCamera =\n/** @class */\nfunction (_super) {\n  __extends(VirtualJoysticksCamera, _super);\n  /**\r\n   * Intantiates a VirtualJoysticksCamera. It can be useful in First Person Shooter game for instance.\r\n   * It is identical to the Free Camera and simply adds by default a virtual joystick.\r\n   * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\r\n   * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\r\n   * @param name Define the name of the camera in the scene\r\n   * @param position Define the start position of the camera in the scene\r\n   * @param scene Define the scene the camera belongs to\r\n   */\n\n\n  function VirtualJoysticksCamera(name, position, scene) {\n    var _this = _super.call(this, name, position, scene) || this;\n\n    _this.inputs.addVirtualJoystick();\n\n    return _this;\n  }\n  /**\r\n   * Gets the current object class name.\r\n   * @return the class name\r\n   */\n\n\n  VirtualJoysticksCamera.prototype.getClassName = function () {\n    return \"VirtualJoysticksCamera\";\n  };\n\n  return VirtualJoysticksCamera;\n}(FreeCamera);\n\nexport { VirtualJoysticksCamera };","map":{"version":3,"sources":["../../../sourceES6/core/Cameras/virtualJoysticksCamera.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,cAA3B;AAEA,SAAS,OAAT,QAAwB,sBAAxB;AACA,SAAS,IAAT,QAAqB,SAArB;AAEA,OAAO,yCAAP;AAEA,IAAI,CAAC,kBAAL,CAAwB,wBAAxB,EAAkD,UAAC,IAAD,EAAO,KAAP,EAAY;AAC1D,SAAO,YAAA;AAAM,WAAA,IAAI,sBAAJ,CAA2B,IAA3B,EAAiC,OAAO,CAAC,IAAR,EAAjC,EAAA,KAAA,CAAA;AAAuD,GAApE;AACH,CAFD;AAIA;;;;;;;AAMA,IAAA,sBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4C,EAAA,SAAA,CAAA,sBAAA,EAAA,MAAA,CAAA;AAExC;;;;;;;;;;;AASA,WAAA,sBAAA,CAAY,IAAZ,EAA0B,QAA1B,EAA6C,KAA7C,EAAyD;AAAzD,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,KAA4B,IADhC;;AAEI,IAAA,KAAI,CAAC,MAAL,CAAY,kBAAZ;;;AACH;AAED;;;;;;AAIO,EAAA,sBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,wBAAP;AACH,GAFM;;AAGX,SAAA,sBAAA;AAAC,CAvBD,CAA4C,UAA5C,CAAA","sourcesContent":["import { FreeCamera } from \"./freeCamera\";\r\nimport { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Node } from \"../node\";\r\n\r\nimport \"./Inputs/freeCameraVirtualJoystickInput\";\r\n\r\nNode.AddNodeConstructor(\"VirtualJoysticksCamera\", (name, scene) => {\r\n    return () => new VirtualJoysticksCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * This represents a free type of camera. It can be useful in First Person Shooter game for instance.\r\n * It is identical to the Free Camera and simply adds by default a virtual joystick.\r\n * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\r\n * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\r\n */\r\nexport class VirtualJoysticksCamera extends FreeCamera {\r\n\r\n    /**\r\n     * Intantiates a VirtualJoysticksCamera. It can be useful in First Person Shooter game for instance.\r\n     * It is identical to the Free Camera and simply adds by default a virtual joystick.\r\n     * Virtual Joysticks are on-screen 2D graphics that are used to control the camera or other scene items.\r\n     * @see https://doc.babylonjs.com/features/cameras#virtual-joysticks-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene: Scene) {\r\n        super(name, position, scene);\r\n        this.inputs.addVirtualJoystick();\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @return the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"VirtualJoysticksCamera\";\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}