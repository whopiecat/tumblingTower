{"ast":null,"code":"import { Logger } from './logger';\nimport { _TypeStore } from './typeStore';\n/**\r\n * Class used to enable instatition of objects by class name\r\n */\n\nvar InstantiationTools =\n/** @class */\nfunction () {\n  function InstantiationTools() {}\n  /**\r\n   * Tries to instantiate a new object from a given class name\r\n   * @param className defines the class name to instantiate\r\n   * @returns the new object or null if the system was not able to do the instantiation\r\n   */\n\n\n  InstantiationTools.Instantiate = function (className) {\n    if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\n      return this.RegisteredExternalClasses[className];\n    }\n\n    var internalClass = _TypeStore.GetClass(className);\n\n    if (internalClass) {\n      return internalClass;\n    }\n\n    Logger.Warn(className + \" not found, you may have missed an import.\");\n    var arr = className.split(\".\");\n    var fn = window || this;\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      fn = fn[arr[i]];\n    }\n\n    if (typeof fn !== \"function\") {\n      return null;\n    }\n\n    return fn;\n  };\n  /**\r\n   * Use this object to register external classes like custom textures or material\r\n   * to allow the laoders to instantiate them\r\n   */\n\n\n  InstantiationTools.RegisteredExternalClasses = {};\n  return InstantiationTools;\n}();\n\nexport { InstantiationTools };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/instantiationTools.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,UAAvB;AACA,SAAS,UAAT,QAA2B,aAA3B;AAEA;;;;AAGA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA,CAqCC;AA9BG;;;;;;;AAKc,EAAA,kBAAA,CAAA,WAAA,GAAd,UAA0B,SAA1B,EAA2C;AACvC,QAAI,KAAK,yBAAL,IAAkC,KAAK,yBAAL,CAA+B,SAA/B,CAAtC,EAAiF;AAC7E,aAAO,KAAK,yBAAL,CAA+B,SAA/B,CAAP;AACH;;AAED,QAAM,aAAa,GAAG,UAAU,CAAC,QAAX,CAAoB,SAApB,CAAtB;;AACA,QAAI,aAAJ,EAAmB;AACf,aAAO,aAAP;AACH;;AAED,IAAA,MAAM,CAAC,IAAP,CAAY,SAAS,GAAG,4CAAxB;AAEA,QAAI,GAAG,GAAG,SAAS,CAAC,KAAV,CAAgB,GAAhB,CAAV;AAEA,QAAI,EAAE,GAAS,MAAM,IAAI,IAAzB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,GAAG,CAAC,MAA1B,EAAkC,CAAC,GAAG,GAAtC,EAA2C,CAAC,EAA5C,EAAgD;AAC5C,MAAA,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAD,CAAJ,CAAP;AACH;;AAED,QAAI,OAAO,EAAP,KAAc,UAAlB,EAA8B;AAC1B,aAAO,IAAP;AACH;;AAED,WAAO,EAAP;AACH,GAxBa;AAXd;;;;;;AAIc,EAAA,kBAAA,CAAA,yBAAA,GAAuD,EAAvD;AAgClB,SAAA,kBAAA;AAAC,CArCD,EAAA;;SAAa,kB","sourcesContent":["import { Logger } from './logger';\r\nimport { _TypeStore } from './typeStore';\r\n\r\n/**\r\n * Class used to enable instatition of objects by class name\r\n */\r\nexport class InstantiationTools {\r\n    /**\r\n     * Use this object to register external classes like custom textures or material\r\n     * to allow the laoders to instantiate them\r\n     */\r\n    public static RegisteredExternalClasses: { [key: string]: Object } = {};\r\n\r\n    /**\r\n     * Tries to instantiate a new object from a given class name\r\n     * @param className defines the class name to instantiate\r\n     * @returns the new object or null if the system was not able to do the instantiation\r\n     */\r\n    public static Instantiate(className: string): any {\r\n        if (this.RegisteredExternalClasses && this.RegisteredExternalClasses[className]) {\r\n            return this.RegisteredExternalClasses[className];\r\n        }\r\n\r\n        const internalClass = _TypeStore.GetClass(className);\r\n        if (internalClass) {\r\n            return internalClass;\r\n        }\r\n\r\n        Logger.Warn(className + \" not found, you may have missed an import.\");\r\n\r\n        var arr = className.split(\".\");\r\n\r\n        var fn: any = (window || this);\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            fn = fn[arr[i]];\r\n        }\r\n\r\n        if (typeof fn !== \"function\") {\r\n            return null;\r\n        }\r\n\r\n        return fn;\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}