{"ast":null,"code":"import { Effect } from \"../Materials/effect\";\nvar name = 'filterPixelShader';\nvar shader = \"\\nvarying vec2 vUV;\\nuniform sampler2D textureSampler;\\nuniform mat4 kernelMatrix;\\nvoid main(void)\\n{\\nvec3 baseColor=texture2D(textureSampler,vUV).rgb;\\nvec3 updatedColor=(kernelMatrix*vec4(baseColor,1.0)).rgb;\\ngl_FragColor=vec4(updatedColor,1.0);\\n}\";\nEffect.ShadersStore[name] = shader;\n/** @hidden */\n\nexport var filterPixelShader = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"sources":["../../../sourceES6/core/Shaders/filter.fragment.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,qBAAvB;AAEA,IAAI,IAAI,GAAG,mBAAX;AACA,IAAI,MAAM,GAAG,+PAAb;AAWA,MAAM,CAAC,YAAP,CAAoB,IAApB,IAA4B,MAA5B;AACA;;AACA,OAAO,IAAI,iBAAiB,GAAG;AAAE,EAAA,IAAI,EAAA,IAAN;AAAQ,EAAA,MAAM,EAAA;AAAd,CAAxB","sourcesContent":["import { Effect } from \"../Materials/effect\";\n\nlet name = 'filterPixelShader';\nlet shader = `\nvarying vec2 vUV;\nuniform sampler2D textureSampler;\nuniform mat4 kernelMatrix;\nvoid main(void)\n{\nvec3 baseColor=texture2D(textureSampler,vUV).rgb;\nvec3 updatedColor=(kernelMatrix*vec4(baseColor,1.0)).rgb;\ngl_FragColor=vec4(updatedColor,1.0);\n}`;\n\nEffect.ShadersStore[name] = shader;\n/** @hidden */\nexport var filterPixelShader = { name, shader };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}