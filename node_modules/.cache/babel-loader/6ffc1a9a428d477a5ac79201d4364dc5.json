{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../../Misc/typeStore';\n/**\r\n * Block used to make gl_FragCoord available\r\n */\n\nvar FragCoordBlock =\n/** @class */\nfunction (_super) {\n  __extends(FragCoordBlock, _super);\n  /**\r\n   * Creates a new FragCoordBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function FragCoordBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n\n    _this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    _this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  FragCoordBlock.prototype.getClassName = function () {\n    return \"FragCoordBlock\";\n  };\n\n  Object.defineProperty(FragCoordBlock.prototype, \"xy\", {\n    /**\r\n     * Gets the xy component\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"xyz\", {\n    /**\r\n     * Gets the xyz component\r\n     */\n    get: function () {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"xyzw\", {\n    /**\r\n     * Gets the xyzw component\r\n     */\n    get: function () {\n      return this._outputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"x\", {\n    /**\r\n     * Gets the x component\r\n     */\n    get: function () {\n      return this._outputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"y\", {\n    /**\r\n     * Gets the y component\r\n     */\n    get: function () {\n      return this._outputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"z\", {\n    /**\r\n     * Gets the z component\r\n     */\n    get: function () {\n      return this._outputs[5];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FragCoordBlock.prototype, \"output\", {\n    /**\r\n     * Gets the w component\r\n     */\n    get: function () {\n      return this._outputs[6];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  FragCoordBlock.prototype.writeOutputs = function (state) {\n    var code = \"\";\n\n    for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n      var output = _a[_i];\n\n      if (output.hasEndpoints) {\n        code += this._declareOutput(output, state) + \" = gl_FragCoord.\" + output.name + \";\\r\\n\";\n      }\n    }\n\n    return code;\n  };\n\n  FragCoordBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    if (state.target === NodeMaterialBlockTargets.Vertex) {\n      throw \"FragCoordBlock must only be used in a fragment shader\";\n    }\n\n    state.compilationString += this.writeOutputs(state);\n    return this;\n  };\n\n  return FragCoordBlock;\n}(NodeMaterialBlock);\n\nexport { FragCoordBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.FragCoordBlock\"] = FragCoordBlock;","map":{"version":3,"sources":["../../../../../../sourceES6/core/Materials/Node/Blocks/Fragment/fragCoordBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeMaterialBlock } from '../../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../../nodeMaterialBuildState';\r\nimport { NodeMaterialConnectionPoint } from '../../nodeMaterialBlockConnectionPoint';\r\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\r\nimport { _TypeStore } from '../../../../Misc/typeStore';\r\n\r\n/**\r\n * Block used to make gl_FragCoord available\r\n */\r\nexport class FragCoordBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Creates a new FragCoordBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment);\r\n\r\n        this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n        this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"FragCoordBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component\r\n     */\r\n    public get xy(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component\r\n     */\r\n    public get xyz(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyzw component\r\n     */\r\n    public get xyzw(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the x component\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the y component\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the z component\r\n     */\r\n    public get z(): NodeMaterialConnectionPoint {\r\n        return this._outputs[5];\r\n    }\r\n\r\n    /**\r\n     * Gets the w component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[6];\r\n    }\r\n\r\n    protected writeOutputs(state: NodeMaterialBuildState): string {\r\n        let code = \"\";\r\n\r\n        for (var output of this._outputs) {\r\n            if (output.hasEndpoints) {\r\n                code += `${this._declareOutput(output, state)} = gl_FragCoord.${output.name};\\r\\n`;\r\n            }\r\n        }\r\n\r\n        return code;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        if (state.target === NodeMaterialBlockTargets.Vertex) {\r\n            throw \"FragCoordBlock must only be used in a fragment shader\";\r\n        }\r\n\r\n        state.compilationString += this.writeOutputs(state);\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.FragCoordBlock\"] = FragCoordBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}