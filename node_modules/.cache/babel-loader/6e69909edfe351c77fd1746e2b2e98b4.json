{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\nimport { Color3 } from '../../../Maths/math.color';\nimport { Observable } from '../../../Misc/observable';\n/**\r\n * Class used to store a color step for the GradientBlock\r\n */\n\nvar GradientBlockColorStep =\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new GradientBlockColorStep\r\n   * @param step defines a value indicating which step this color is associated with (between 0 and 1)\r\n   * @param color defines the color associated with this step\r\n   */\n  function GradientBlockColorStep(step, color) {\n    this.step = step;\n    this.color = color;\n  }\n\n  Object.defineProperty(GradientBlockColorStep.prototype, \"step\", {\n    /**\r\n     * Gets value indicating which step this color is associated with (between 0 and 1)\r\n     */\n    get: function () {\n      return this._step;\n    },\n\n    /**\r\n     * Sets a value indicating which step this color is associated with (between 0 and 1)\r\n    */\n    set: function (val) {\n      this._step = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(GradientBlockColorStep.prototype, \"color\", {\n    /**\r\n     * Gets the color associated with this step\r\n     */\n    get: function () {\n      return this._color;\n    },\n\n    /**\r\n     * Sets the color associated with this step\r\n     */\n    set: function (val) {\n      this._color = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return GradientBlockColorStep;\n}();\n\nexport { GradientBlockColorStep };\n/**\r\n * Block used to return a color from a gradient based on an input value between 0 and 1\r\n */\n\nvar GradientBlock =\n/** @class */\nfunction (_super) {\n  __extends(GradientBlock, _super);\n  /**\r\n   * Creates a new GradientBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function GradientBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\r\n     * Gets or sets the list of color steps\r\n     */\n\n\n    _this.colorSteps = [new GradientBlockColorStep(0, Color3.Black()), new GradientBlockColorStep(1.0, Color3.White())];\n    /** Gets an observable raised when the value is changed */\n\n    _this.onValueChangedObservable = new Observable();\n\n    _this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n\n    _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n\n    return _this;\n  }\n  /** calls observable when the value is changed*/\n\n\n  GradientBlock.prototype.colorStepsUpdated = function () {\n    this.onValueChangedObservable.notifyObservers(this);\n  };\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  GradientBlock.prototype.getClassName = function () {\n    return \"GradientBlock\";\n  };\n\n  Object.defineProperty(GradientBlock.prototype, \"gradient\", {\n    /**\r\n     * Gets the gradient input component\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(GradientBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  GradientBlock.prototype._writeColorConstant = function (index) {\n    var step = this.colorSteps[index];\n    return \"vec3(\" + step.color.r + \", \" + step.color.g + \", \" + step.color.b + \")\";\n  };\n\n  GradientBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n\n    if (!this.colorSteps.length || !this.gradient.connectedPoint) {\n      state.compilationString += this._declareOutput(output, state) + \" = vec3(0., 0., 0.);\\r\\n\";\n      return;\n    }\n\n    var tempColor = state._getFreeVariableName(\"gradientTempColor\");\n\n    var tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\n\n    state.compilationString += \"vec3 \" + tempColor + \" = \" + this._writeColorConstant(0) + \";\\r\\n\";\n    state.compilationString += \"float \" + tempPosition + \";\\r\\n\";\n    var gradientSource = this.gradient.associatedVariableName;\n\n    if (this.gradient.connectedPoint.type !== NodeMaterialBlockConnectionPointTypes.Float) {\n      gradientSource += \".x\";\n    }\n\n    for (var index = 1; index < this.colorSteps.length; index++) {\n      var step = this.colorSteps[index];\n      var previousStep = this.colorSteps[index - 1];\n      state.compilationString += tempPosition + \" = clamp((\" + gradientSource + \" - \" + state._emitFloat(previousStep.step) + \") / (\" + state._emitFloat(step.step) + \" -  \" + state._emitFloat(previousStep.step) + \"), 0.0, 1.0) * step(\" + state._emitFloat(index) + \", \" + state._emitFloat(this.colorSteps.length - 1) + \");\\r\\n\";\n      state.compilationString += tempColor + \" = mix(\" + tempColor + \", \" + this._writeColorConstant(index) + \", \" + tempPosition + \");\\r\\n\";\n    }\n\n    state.compilationString += this._declareOutput(output, state) + (\" = \" + tempColor + \";\\r\\n\");\n    return this;\n  };\n\n  GradientBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.colorSteps = [];\n\n    for (var _i = 0, _a = this.colorSteps; _i < _a.length; _i++) {\n      var step = _a[_i];\n      serializationObject.colorSteps.push({\n        step: step.step,\n        color: {\n          r: step.color.r,\n          g: step.color.g,\n          b: step.color.b\n        }\n      });\n    }\n\n    return serializationObject;\n  };\n\n  GradientBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.colorSteps = [];\n\n    for (var _i = 0, _a = serializationObject.colorSteps; _i < _a.length; _i++) {\n      var step = _a[_i];\n      this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\n    }\n  };\n\n  GradientBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = \"\";\n\n    for (var _i = 0, _a = this.colorSteps; _i < _a.length; _i++) {\n      var colorStep = _a[_i];\n      codeString += this._codeVariableName + \".colorSteps.push(new BABYLON.GradientBlockColorStep(\" + colorStep.step + \", new BABYLON.Color3(\" + colorStep.color.r + \", \" + colorStep.color.g + \", \" + colorStep.color.b + \")));\\r\\n\";\n    }\n\n    return codeString;\n  };\n\n  return GradientBlock;\n}(NodeMaterialBlock);\n\nexport { GradientBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.GradientBlock\"] = GradientBlock;","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Blocks/gradientBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../nodeMaterialBuildState';\r\nimport { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';\r\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\r\nimport { _TypeStore } from '../../../Misc/typeStore';\r\nimport { Color3 } from '../../../Maths/math.color';\r\nimport { Scene } from '../../../scene';\r\nimport { Observable } from '../../../Misc/observable';\r\n\r\n/**\r\n * Class used to store a color step for the GradientBlock\r\n */\r\nexport class GradientBlockColorStep {\r\n    private _step: number;\r\n    /**\r\n     * Gets value indicating which step this color is associated with (between 0 and 1)\r\n     */\r\n    public get step(): number {\r\n        return this._step;\r\n    }\r\n\r\n    /**\r\n     * Sets a value indicating which step this color is associated with (between 0 and 1)\r\n    */\r\n    public set step(val: number) {\r\n        this._step = val;\r\n    }\r\n\r\n    private _color: Color3;\r\n\r\n    /**\r\n     * Gets the color associated with this step\r\n     */\r\n    public get color(): Color3 {\r\n        return this._color;\r\n    }\r\n\r\n    /**\r\n     * Sets the color associated with this step\r\n     */\r\n    public set color(val: Color3) {\r\n        this._color = val;\r\n    }\r\n\r\n    /**\r\n     * Creates a new GradientBlockColorStep\r\n     * @param step defines a value indicating which step this color is associated with (between 0 and 1)\r\n     * @param color defines the color associated with this step\r\n     */\r\n    public constructor(step: number, color: Color3) {\r\n        this.step = step;\r\n        this.color = color;\r\n    }\r\n}\r\n\r\n/**\r\n * Block used to return a color from a gradient based on an input value between 0 and 1\r\n */\r\nexport class GradientBlock extends NodeMaterialBlock {\r\n\r\n    /**\r\n     * Gets or sets the list of color steps\r\n     */\r\n    public colorSteps: GradientBlockColorStep[] = [\r\n        new GradientBlockColorStep(0, Color3.Black()),\r\n        new GradientBlockColorStep(1.0, Color3.White())\r\n    ];\r\n\r\n    /** Gets an observable raised when the value is changed */\r\n    public onValueChangedObservable = new Observable<GradientBlock>();\r\n\r\n    /** calls observable when the value is changed*/\r\n    public colorStepsUpdated() {\r\n        this.onValueChangedObservable.notifyObservers(this);\r\n    }\r\n    /**\r\n     * Creates a new GradientBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\r\n\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\r\n        this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"GradientBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the gradient input component\r\n     */\r\n    public get gradient(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    private _writeColorConstant(index: number) {\r\n        let step = this.colorSteps[index];\r\n        return `vec3(${step.color.r}, ${step.color.g}, ${step.color.b})`;\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        let output = this._outputs[0];\r\n\r\n        if (!this.colorSteps.length || !this.gradient.connectedPoint) {\r\n            state.compilationString += this._declareOutput(output, state) + ` = vec3(0., 0., 0.);\\r\\n`;\r\n            return;\r\n        }\r\n\r\n        let tempColor = state._getFreeVariableName(\"gradientTempColor\");\r\n        let tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\r\n\r\n        state.compilationString += `vec3 ${tempColor} = ${this._writeColorConstant(0)};\\r\\n`;\r\n        state.compilationString += `float ${tempPosition};\\r\\n`;\r\n\r\n        let gradientSource = this.gradient.associatedVariableName;\r\n\r\n        if (this.gradient.connectedPoint!.type !== NodeMaterialBlockConnectionPointTypes.Float) {\r\n            gradientSource += \".x\";\r\n        }\r\n\r\n        for (var index = 1; index < this.colorSteps.length; index++) {\r\n            let step = this.colorSteps[index];\r\n            let previousStep = this.colorSteps[index - 1];\r\n            state.compilationString += `${tempPosition} = clamp((${gradientSource} - ${state._emitFloat(previousStep.step)}) / (${state._emitFloat(step.step)} -  ${state._emitFloat(previousStep.step)}), 0.0, 1.0) * step(${state._emitFloat(index)}, ${state._emitFloat(this.colorSteps.length - 1)});\\r\\n`;\r\n            state.compilationString += `${tempColor} = mix(${tempColor}, ${this._writeColorConstant(index)}, ${tempPosition});\\r\\n`;\r\n        }\r\n        state.compilationString += this._declareOutput(output, state) + ` = ${tempColor};\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n\r\n    public serialize(): any {\r\n        let serializationObject = super.serialize();\r\n\r\n        serializationObject.colorSteps = [];\r\n\r\n        for (var step of this.colorSteps) {\r\n            serializationObject.colorSteps.push({\r\n                step: step.step,\r\n                color: {\r\n                    r: step.color.r,\r\n                    g: step.color.g,\r\n                    b: step.color.b\r\n                }\r\n            });\r\n        }\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.colorSteps = [];\r\n\r\n        for (var step of serializationObject.colorSteps) {\r\n            this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\r\n        }\r\n    }\r\n\r\n    protected _dumpPropertiesCode() {\r\n        var codeString = \"\";\r\n\r\n        for (var colorStep of this.colorSteps) {\r\n            codeString += `${this._codeVariableName}.colorSteps.push(new BABYLON.GradientBlockColorStep(${colorStep.step}, new BABYLON.Color3(${colorStep.color.r}, ${colorStep.color.g}, ${colorStep.color.b})));\\r\\n`;\r\n        }\r\n\r\n        return codeString;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.GradientBlock\"] = GradientBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}