{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator\";\n/**\r\n * Block used to clamp a float\r\n */\n\nvar ClampBlock =\n/** @class */\nfunction (_super) {\n  __extends(ClampBlock, _super);\n  /**\r\n   * Creates a new ClampBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function ClampBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /** Gets or sets the minimum range */\n\n\n    _this.minimum = 0.0;\n    /** Gets or sets the maximum range */\n\n    _this.maximum = 1.0;\n\n    _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  ClampBlock.prototype.getClassName = function () {\n    return \"ClampBlock\";\n  };\n\n  Object.defineProperty(ClampBlock.prototype, \"value\", {\n    /**\r\n     * Gets the value input component\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ClampBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ClampBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n    state.compilationString += this._declareOutput(output, state) + (\" = clamp(\" + this.value.associatedVariableName + \", \" + this._writeFloat(this.minimum) + \", \" + this._writeFloat(this.maximum) + \");\\r\\n\");\n    return this;\n  };\n\n  ClampBlock.prototype._dumpPropertiesCode = function () {\n    var codeString = this._codeVariableName + \".minimum = \" + this.minimum + \";\\r\\n\";\n    codeString += this._codeVariableName + \".maximum = \" + this.maximum + \";\\r\\n\";\n    return codeString;\n  };\n\n  ClampBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.minimum = this.minimum;\n    serializationObject.maximum = this.maximum;\n    return serializationObject;\n  };\n\n  ClampBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.minimum = serializationObject.minimum;\n    this.maximum = serializationObject.maximum;\n  };\n\n  __decorate([editableInPropertyPage(\"Minimum\", PropertyTypeForEdition.Float)], ClampBlock.prototype, \"minimum\", void 0);\n\n  __decorate([editableInPropertyPage(\"Maximum\", PropertyTypeForEdition.Float)], ClampBlock.prototype, \"maximum\", void 0);\n\n  return ClampBlock;\n}(NodeMaterialBlock);\n\nexport { ClampBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.ClampBlock\"] = ClampBlock;","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Blocks/clampBlock.ts"],"names":[],"mappings":";AAAA,SAAS,iBAAT,QAAkC,sBAAlC;AACA,SAAS,qCAAT,QAAsD,gDAAtD;AAGA,SAAS,wBAAT,QAAyC,mCAAzC;AACA,SAAS,UAAT,QAA2B,yBAA3B;AAEA,SAAS,sBAAT,EAAiC,sBAAjC,QAA+D,0BAA/D;AAEA;;;;AAGA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;AAS5B;;;;;;AAIA,WAAA,UAAA,CAAmB,IAAnB,EAA+B;AAA/B,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,wBAAwB,CAAC,OAArC,KAA6C,IADjD;AAXA;;;AAEO,IAAA,KAAA,CAAA,OAAA,GAAU,GAAV;AACP;;AAEO,IAAA,KAAA,CAAA,OAAA,GAAU,GAAV;;AASH,IAAA,KAAI,CAAC,aAAL,CAAmB,OAAnB,EAA4B,qCAAqC,CAAC,UAAlE;;AACA,IAAA,KAAI,CAAC,cAAL,CAAoB,QAApB,EAA8B,qCAAqC,CAAC,YAApE;;AAEA,IAAA,KAAI,CAAC,QAAL,CAAc,CAAd,EAAiB,qBAAjB,GAAyC,KAAI,CAAC,OAAL,CAAa,CAAb,CAAzC;;AACH;AAED;;;;;;AAIO,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,YAAP;AACH,GAFM;;AAOP,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA,YAAA;AACI,aAAO,KAAK,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,UAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,CAAd,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIU,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAmD;AAC/C,IAAA,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,EAAkB,KAAlB;;AAEA,QAAI,MAAM,GAAG,KAAK,QAAL,CAAc,CAAd,CAAb;AAEA,IAAA,KAAK,CAAC,iBAAN,IAA2B,KAAK,cAAL,CAAoB,MAApB,EAA4B,KAA5B,KAAqC,cAAY,KAAK,KAAL,CAAW,sBAAvB,GAA6C,IAA7C,GAAkD,KAAK,WAAL,CAAiB,KAAK,OAAtB,CAAlD,GAAgF,IAAhF,GAAqF,KAAK,WAAL,CAAiB,KAAK,OAAtB,CAArF,GAAmH,QAAxJ,CAA3B;AAEA,WAAO,IAAP;AACH,GARS;;AAUA,EAAA,UAAA,CAAA,SAAA,CAAA,mBAAA,GAAV,YAAA;AACI,QAAI,UAAU,GAAM,KAAK,iBAAL,GAAsB,aAAtB,GAAoC,KAAK,OAAzC,GAAgD,OAApE;AAEA,IAAA,UAAU,IAAO,KAAK,iBAAL,GAAsB,aAAtB,GAAoC,KAAK,OAAzC,GAAgD,OAAjE;AAEA,WAAO,UAAP;AACH,GANS;;AAQH,EAAA,UAAA,CAAA,SAAA,CAAA,SAAA,GAAP,YAAA;AACI,QAAI,mBAAmB,GAAG,MAAA,CAAA,SAAA,CAAM,SAAN,CAAe,IAAf,CAAe,IAAf,CAA1B;;AAEA,IAAA,mBAAmB,CAAC,OAApB,GAA8B,KAAK,OAAnC;AACA,IAAA,mBAAmB,CAAC,OAApB,GAA8B,KAAK,OAAnC;AAEA,WAAO,mBAAP;AACH,GAPM;;AASA,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAP,UAAoB,mBAApB,EAA8C,KAA9C,EAA4D,OAA5D,EAA2E;AACvE,IAAA,MAAA,CAAA,SAAA,CAAM,YAAN,CAAkB,IAAlB,CAAkB,IAAlB,EAAmB,mBAAnB,EAAwC,KAAxC,EAA+C,OAA/C;;AAEA,SAAK,OAAL,GAAe,mBAAmB,CAAC,OAAnC;AACA,SAAK,OAAL,GAAe,mBAAmB,CAAC,OAAnC;AACH,GALM;;AAnEP,EAAA,UAAA,CAAA,CADC,sBAAsB,CAAC,SAAD,EAAY,sBAAsB,CAAC,KAAnC,CACvB,CAAA,E,oBAAA,E,SAAA,E,KAAqB,CAArB,CAAA;;AAGA,EAAA,UAAA,CAAA,CADC,sBAAsB,CAAC,SAAD,EAAY,sBAAsB,CAAC,KAAnC,CACvB,CAAA,E,oBAAA,E,SAAA,E,KAAqB,CAArB,CAAA;;AAsEJ,SAAA,UAAA;AAAC,CA7ED,CAAgC,iBAAhC,CAAA;;SAAa,U;AA+Eb,UAAU,CAAC,eAAX,CAA2B,oBAA3B,IAAmD,UAAnD","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../nodeMaterialBuildState';\r\nimport { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';\r\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\r\nimport { _TypeStore } from '../../../Misc/typeStore';\r\nimport { Scene } from '../../../scene';\r\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator\";\r\n\r\n/**\r\n * Block used to clamp a float\r\n */\r\nexport class ClampBlock extends NodeMaterialBlock {\r\n\r\n    /** Gets or sets the minimum range */\r\n    @editableInPropertyPage(\"Minimum\", PropertyTypeForEdition.Float)\r\n    public minimum = 0.0;\r\n    /** Gets or sets the maximum range */\r\n    @editableInPropertyPage(\"Maximum\", PropertyTypeForEdition.Float)\r\n    public maximum = 1.0;\r\n\r\n    /**\r\n     * Creates a new ClampBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"ClampBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the value input component\r\n     */\r\n    public get value(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        let output = this._outputs[0];\r\n\r\n        state.compilationString += this._declareOutput(output, state) + ` = clamp(${this.value.associatedVariableName}, ${this._writeFloat(this.minimum)}, ${this._writeFloat(this.maximum)});\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n\r\n    protected _dumpPropertiesCode() {\r\n        var codeString = `${this._codeVariableName}.minimum = ${this.minimum};\\r\\n`;\r\n\r\n        codeString += `${this._codeVariableName}.maximum = ${this.maximum};\\r\\n`;\r\n\r\n        return codeString;\r\n    }\r\n\r\n    public serialize(): any {\r\n        let serializationObject = super.serialize();\r\n\r\n        serializationObject.minimum = this.minimum;\r\n        serializationObject.maximum = this.maximum;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.minimum = serializationObject.minimum;\r\n        this.maximum = serializationObject.maximum;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.ClampBlock\"] = ClampBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}