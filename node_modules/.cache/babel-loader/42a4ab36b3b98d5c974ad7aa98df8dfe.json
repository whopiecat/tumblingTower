{"ast":null,"code":"/**\r\n * @hidden\r\n **/\nvar DepthCullingState =\n/** @class */\nfunction () {\n  /**\r\n   * Initializes the state.\r\n   */\n  function DepthCullingState() {\n    this._isDepthTestDirty = false;\n    this._isDepthMaskDirty = false;\n    this._isDepthFuncDirty = false;\n    this._isCullFaceDirty = false;\n    this._isCullDirty = false;\n    this._isZOffsetDirty = false;\n    this._isFrontFaceDirty = false;\n    this.reset();\n  }\n\n  Object.defineProperty(DepthCullingState.prototype, \"isDirty\", {\n    get: function () {\n      return this._isDepthFuncDirty || this._isDepthTestDirty || this._isDepthMaskDirty || this._isCullFaceDirty || this._isCullDirty || this._isZOffsetDirty || this._isFrontFaceDirty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"zOffset\", {\n    get: function () {\n      return this._zOffset;\n    },\n    set: function (value) {\n      if (this._zOffset === value) {\n        return;\n      }\n\n      this._zOffset = value;\n      this._isZOffsetDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"cullFace\", {\n    get: function () {\n      return this._cullFace;\n    },\n    set: function (value) {\n      if (this._cullFace === value) {\n        return;\n      }\n\n      this._cullFace = value;\n      this._isCullFaceDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"cull\", {\n    get: function () {\n      return this._cull;\n    },\n    set: function (value) {\n      if (this._cull === value) {\n        return;\n      }\n\n      this._cull = value;\n      this._isCullDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"depthFunc\", {\n    get: function () {\n      return this._depthFunc;\n    },\n    set: function (value) {\n      if (this._depthFunc === value) {\n        return;\n      }\n\n      this._depthFunc = value;\n      this._isDepthFuncDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"depthMask\", {\n    get: function () {\n      return this._depthMask;\n    },\n    set: function (value) {\n      if (this._depthMask === value) {\n        return;\n      }\n\n      this._depthMask = value;\n      this._isDepthMaskDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"depthTest\", {\n    get: function () {\n      return this._depthTest;\n    },\n    set: function (value) {\n      if (this._depthTest === value) {\n        return;\n      }\n\n      this._depthTest = value;\n      this._isDepthTestDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DepthCullingState.prototype, \"frontFace\", {\n    get: function () {\n      return this._frontFace;\n    },\n    set: function (value) {\n      if (this._frontFace === value) {\n        return;\n      }\n\n      this._frontFace = value;\n      this._isFrontFaceDirty = true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DepthCullingState.prototype.reset = function () {\n    this._depthMask = true;\n    this._depthTest = true;\n    this._depthFunc = null;\n    this._cullFace = null;\n    this._cull = null;\n    this._zOffset = 0;\n    this._frontFace = null;\n    this._isDepthTestDirty = true;\n    this._isDepthMaskDirty = true;\n    this._isDepthFuncDirty = false;\n    this._isCullFaceDirty = false;\n    this._isCullDirty = false;\n    this._isZOffsetDirty = false;\n    this._isFrontFaceDirty = false;\n  };\n\n  DepthCullingState.prototype.apply = function (gl) {\n    if (!this.isDirty) {\n      return;\n    } // Cull\n\n\n    if (this._isCullDirty) {\n      if (this.cull) {\n        gl.enable(gl.CULL_FACE);\n      } else {\n        gl.disable(gl.CULL_FACE);\n      }\n\n      this._isCullDirty = false;\n    } // Cull face\n\n\n    if (this._isCullFaceDirty) {\n      gl.cullFace(this.cullFace);\n      this._isCullFaceDirty = false;\n    } // Depth mask\n\n\n    if (this._isDepthMaskDirty) {\n      gl.depthMask(this.depthMask);\n      this._isDepthMaskDirty = false;\n    } // Depth test\n\n\n    if (this._isDepthTestDirty) {\n      if (this.depthTest) {\n        gl.enable(gl.DEPTH_TEST);\n      } else {\n        gl.disable(gl.DEPTH_TEST);\n      }\n\n      this._isDepthTestDirty = false;\n    } // Depth func\n\n\n    if (this._isDepthFuncDirty) {\n      gl.depthFunc(this.depthFunc);\n      this._isDepthFuncDirty = false;\n    } // zOffset\n\n\n    if (this._isZOffsetDirty) {\n      if (this.zOffset) {\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(this.zOffset, 0);\n      } else {\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n      }\n\n      this._isZOffsetDirty = false;\n    } // Front face\n\n\n    if (this._isFrontFaceDirty) {\n      gl.frontFace(this.frontFace);\n      this._isFrontFaceDirty = false;\n    }\n  };\n\n  return DepthCullingState;\n}();\n\nexport { DepthCullingState };","map":{"version":3,"sources":["../../../sourceES6/core/States/depthCullingState.ts"],"names":[],"mappings":"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","sourcesContent":["import { Nullable } from \"../types\";\r\n\r\n/**\r\n * @hidden\r\n **/\r\nexport class DepthCullingState {\r\n    private _isDepthTestDirty = false;\r\n    private _isDepthMaskDirty = false;\r\n    private _isDepthFuncDirty = false;\r\n    private _isCullFaceDirty = false;\r\n    private _isCullDirty = false;\r\n    private _isZOffsetDirty = false;\r\n    private _isFrontFaceDirty = false;\r\n\r\n    private _depthTest: boolean;\r\n    private _depthMask: boolean;\r\n    private _depthFunc: Nullable<number>;\r\n    private _cull: Nullable<boolean>;\r\n    private _cullFace: Nullable<number>;\r\n    private _zOffset: number;\r\n    private _frontFace: Nullable<number>;\r\n\r\n    /**\r\n     * Initializes the state.\r\n     */\r\n    public constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public get isDirty(): boolean {\r\n        return this._isDepthFuncDirty || this._isDepthTestDirty || this._isDepthMaskDirty || this._isCullFaceDirty || this._isCullDirty || this._isZOffsetDirty || this._isFrontFaceDirty;\r\n    }\r\n\r\n    public get zOffset(): number {\r\n        return this._zOffset;\r\n    }\r\n\r\n    public set zOffset(value: number) {\r\n        if (this._zOffset === value) {\r\n            return;\r\n        }\r\n\r\n        this._zOffset = value;\r\n        this._isZOffsetDirty = true;\r\n    }\r\n\r\n    public get cullFace(): Nullable<number> {\r\n        return this._cullFace;\r\n    }\r\n\r\n    public set cullFace(value: Nullable<number>) {\r\n        if (this._cullFace === value) {\r\n            return;\r\n        }\r\n\r\n        this._cullFace = value;\r\n        this._isCullFaceDirty = true;\r\n    }\r\n\r\n    public get cull(): Nullable<boolean> {\r\n        return this._cull;\r\n    }\r\n\r\n    public set cull(value: Nullable<boolean>) {\r\n        if (this._cull === value) {\r\n            return;\r\n        }\r\n\r\n        this._cull = value;\r\n        this._isCullDirty = true;\r\n    }\r\n\r\n    public get depthFunc(): Nullable<number> {\r\n        return this._depthFunc;\r\n    }\r\n\r\n    public set depthFunc(value: Nullable<number>) {\r\n        if (this._depthFunc === value) {\r\n            return;\r\n        }\r\n\r\n        this._depthFunc = value;\r\n        this._isDepthFuncDirty = true;\r\n    }\r\n\r\n    public get depthMask(): boolean {\r\n        return this._depthMask;\r\n    }\r\n\r\n    public set depthMask(value: boolean) {\r\n        if (this._depthMask === value) {\r\n            return;\r\n        }\r\n\r\n        this._depthMask = value;\r\n        this._isDepthMaskDirty = true;\r\n    }\r\n\r\n    public get depthTest(): boolean {\r\n        return this._depthTest;\r\n    }\r\n\r\n    public set depthTest(value: boolean) {\r\n        if (this._depthTest === value) {\r\n            return;\r\n        }\r\n\r\n        this._depthTest = value;\r\n        this._isDepthTestDirty = true;\r\n    }\r\n\r\n    public get frontFace(): Nullable<number> {\r\n        return this._frontFace;\r\n    }\r\n\r\n    public set frontFace(value: Nullable<number>) {\r\n        if (this._frontFace === value) {\r\n            return;\r\n        }\r\n\r\n        this._frontFace = value;\r\n        this._isFrontFaceDirty = true;\r\n    }\r\n\r\n    public reset() {\r\n        this._depthMask = true;\r\n        this._depthTest = true;\r\n        this._depthFunc = null;\r\n        this._cullFace = null;\r\n        this._cull = null;\r\n        this._zOffset = 0;\r\n        this._frontFace = null;\r\n\r\n        this._isDepthTestDirty = true;\r\n        this._isDepthMaskDirty = true;\r\n        this._isDepthFuncDirty = false;\r\n        this._isCullFaceDirty = false;\r\n        this._isCullDirty = false;\r\n        this._isZOffsetDirty = false;\r\n        this._isFrontFaceDirty = false;\r\n    }\r\n\r\n    public apply(gl: WebGLRenderingContext) {\r\n\r\n        if (!this.isDirty) {\r\n            return;\r\n        }\r\n\r\n        // Cull\r\n        if (this._isCullDirty) {\r\n            if (this.cull) {\r\n                gl.enable(gl.CULL_FACE);\r\n            } else {\r\n                gl.disable(gl.CULL_FACE);\r\n            }\r\n\r\n            this._isCullDirty = false;\r\n        }\r\n\r\n        // Cull face\r\n        if (this._isCullFaceDirty) {\r\n            gl.cullFace(<number>this.cullFace);\r\n            this._isCullFaceDirty = false;\r\n        }\r\n\r\n        // Depth mask\r\n        if (this._isDepthMaskDirty) {\r\n            gl.depthMask(this.depthMask);\r\n            this._isDepthMaskDirty = false;\r\n        }\r\n\r\n        // Depth test\r\n        if (this._isDepthTestDirty) {\r\n            if (this.depthTest) {\r\n                gl.enable(gl.DEPTH_TEST);\r\n            } else {\r\n                gl.disable(gl.DEPTH_TEST);\r\n            }\r\n            this._isDepthTestDirty = false;\r\n        }\r\n\r\n        // Depth func\r\n        if (this._isDepthFuncDirty) {\r\n            gl.depthFunc(<number>this.depthFunc);\r\n            this._isDepthFuncDirty = false;\r\n        }\r\n\r\n        // zOffset\r\n        if (this._isZOffsetDirty) {\r\n            if (this.zOffset) {\r\n                gl.enable(gl.POLYGON_OFFSET_FILL);\r\n                gl.polygonOffset(this.zOffset, 0);\r\n            } else {\r\n                gl.disable(gl.POLYGON_OFFSET_FILL);\r\n            }\r\n\r\n            this._isZOffsetDirty = false;\r\n        }\r\n\r\n        // Front face\r\n        if (this._isFrontFaceDirty) {\r\n            gl.frontFace(<number>this.frontFace);\r\n            this._isFrontFaceDirty = false;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}