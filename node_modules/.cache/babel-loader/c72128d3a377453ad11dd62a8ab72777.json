{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\n/**\r\n * Block used to expand a Vector3/4 into 4 outputs (one for each component)\r\n */\n\nvar VectorSplitterBlock =\n/** @class */\nfunction (_super) {\n  __extends(VectorSplitterBlock, _super);\n  /**\r\n   * Create a new VectorSplitterBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function VectorSplitterBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n\n    _this.registerInput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\n\n    _this.registerInput(\"xyz \", NodeMaterialBlockConnectionPointTypes.Vector3, true);\n\n    _this.registerInput(\"xy \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\n\n    _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\n\n    _this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2);\n\n    _this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float);\n\n    _this.inputsAreExclusive = true;\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  VectorSplitterBlock.prototype.getClassName = function () {\n    return \"VectorSplitterBlock\";\n  };\n\n  Object.defineProperty(VectorSplitterBlock.prototype, \"xyzw\", {\n    /**\r\n     * Gets the xyzw component (input)\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"xyzIn\", {\n    /**\r\n     * Gets the xyz component (input)\r\n     */\n    get: function () {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"xyIn\", {\n    /**\r\n     * Gets the xy component (input)\r\n     */\n    get: function () {\n      return this._inputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"xyzOut\", {\n    /**\r\n     * Gets the xyz component (output)\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"xyOut\", {\n    /**\r\n     * Gets the xy component (output)\r\n     */\n    get: function () {\n      return this._outputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"x\", {\n    /**\r\n     * Gets the x component (output)\r\n     */\n    get: function () {\n      return this._outputs[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"y\", {\n    /**\r\n     * Gets the y component (output)\r\n     */\n    get: function () {\n      return this._outputs[3];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"z\", {\n    /**\r\n     * Gets the z component (output)\r\n     */\n    get: function () {\n      return this._outputs[4];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(VectorSplitterBlock.prototype, \"w\", {\n    /**\r\n     * Gets the w component (output)\r\n     */\n    get: function () {\n      return this._outputs[5];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  VectorSplitterBlock.prototype._inputRename = function (name) {\n    switch (name) {\n      case \"xy \":\n        return \"xyIn\";\n\n      case \"xyz \":\n        return \"xyzIn\";\n\n      default:\n        return name;\n    }\n  };\n\n  VectorSplitterBlock.prototype._outputRename = function (name) {\n    switch (name) {\n      case \"xy\":\n        return \"xyOut\";\n\n      case \"xyz\":\n        return \"xyzOut\";\n\n      default:\n        return name;\n    }\n  };\n\n  VectorSplitterBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var input = this.xyzw.isConnected ? this.xyzw : this.xyzIn.isConnected ? this.xyzIn : this.xyIn;\n    var xyzOutput = this._outputs[0];\n    var xyOutput = this._outputs[1];\n    var xOutput = this._outputs[2];\n    var yOutput = this._outputs[3];\n    var zOutput = this._outputs[4];\n    var wOutput = this._outputs[5];\n\n    if (xyzOutput.hasEndpoints) {\n      if (input === this.xyIn) {\n        state.compilationString += this._declareOutput(xyzOutput, state) + (\" = vec3(\" + input.associatedVariableName + \", 0.0);\\r\\n\");\n      } else {\n        state.compilationString += this._declareOutput(xyzOutput, state) + (\" = \" + input.associatedVariableName + \".xyz;\\r\\n\");\n      }\n    }\n\n    if (xyOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(xyOutput, state) + (\" = \" + input.associatedVariableName + \".xy;\\r\\n\");\n    }\n\n    if (xOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(xOutput, state) + (\" = \" + input.associatedVariableName + \".x;\\r\\n\");\n    }\n\n    if (yOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(yOutput, state) + (\" = \" + input.associatedVariableName + \".y;\\r\\n\");\n    }\n\n    if (zOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(zOutput, state) + (\" = \" + input.associatedVariableName + \".z;\\r\\n\");\n    }\n\n    if (wOutput.hasEndpoints) {\n      state.compilationString += this._declareOutput(wOutput, state) + (\" = \" + input.associatedVariableName + \".w;\\r\\n\");\n    }\n\n    return this;\n  };\n\n  return VectorSplitterBlock;\n}(NodeMaterialBlock);\n\nexport { VectorSplitterBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.VectorSplitterBlock\"] = VectorSplitterBlock;","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Blocks/vectorSplitterBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../nodeMaterialBuildState';\r\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\r\nimport { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';\r\nimport { _TypeStore } from '../../../Misc/typeStore';\r\n\r\n/**\r\n * Block used to expand a Vector3/4 into 4 outputs (one for each component)\r\n */\r\nexport class VectorSplitterBlock extends NodeMaterialBlock {\r\n\r\n    /**\r\n     * Create a new VectorSplitterBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\r\n        this.registerInput(\"xyz \", NodeMaterialBlockConnectionPointTypes.Vector3, true);\r\n        this.registerInput(\"xy \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\r\n\r\n        this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\r\n        this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2);\r\n        this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float);\r\n        this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float);\r\n\r\n        this.inputsAreExclusive = true;\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"VectorSplitterBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the xyzw component (input)\r\n     */\r\n    public get xyzw(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component (input)\r\n     */\r\n    public get xyzIn(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component (input)\r\n     */\r\n    public get xyIn(): NodeMaterialConnectionPoint {\r\n        return this._inputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the xyz component (output)\r\n     */\r\n    public get xyzOut(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the xy component (output)\r\n     */\r\n    public get xyOut(): NodeMaterialConnectionPoint {\r\n        return this._outputs[1];\r\n    }\r\n\r\n    /**\r\n     * Gets the x component (output)\r\n     */\r\n    public get x(): NodeMaterialConnectionPoint {\r\n        return this._outputs[2];\r\n    }\r\n\r\n    /**\r\n     * Gets the y component (output)\r\n     */\r\n    public get y(): NodeMaterialConnectionPoint {\r\n        return this._outputs[3];\r\n    }\r\n\r\n    /**\r\n     * Gets the z component (output)\r\n     */\r\n    public get z(): NodeMaterialConnectionPoint {\r\n        return this._outputs[4];\r\n    }\r\n\r\n    /**\r\n     * Gets the w component (output)\r\n     */\r\n    public get w(): NodeMaterialConnectionPoint {\r\n        return this._outputs[5];\r\n    }\r\n\r\n    protected _inputRename(name: string) {\r\n        switch (name) {\r\n            case \"xy \":\r\n                return \"xyIn\";\r\n            case \"xyz \":\r\n                    return \"xyzIn\";\r\n            default:\r\n                return name;\r\n        }\r\n    }\r\n\r\n    protected _outputRename(name: string) {\r\n        switch (name) {\r\n            case \"xy\":\r\n                return \"xyOut\";\r\n            case \"xyz\":\r\n                    return \"xyzOut\";\r\n            default:\r\n                return name;\r\n        }\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        let input = this.xyzw.isConnected ? this.xyzw : this.xyzIn.isConnected ? this.xyzIn : this.xyIn;\r\n\r\n        let xyzOutput = this._outputs[0];\r\n        let xyOutput = this._outputs[1];\r\n        let xOutput = this._outputs[2];\r\n        let yOutput = this._outputs[3];\r\n        let zOutput = this._outputs[4];\r\n        let wOutput = this._outputs[5];\r\n\r\n        if (xyzOutput.hasEndpoints) {\r\n            if (input === this.xyIn) {\r\n                state.compilationString += this._declareOutput(xyzOutput, state) + ` = vec3(${input.associatedVariableName}, 0.0);\\r\\n`;\r\n            } else {\r\n                state.compilationString += this._declareOutput(xyzOutput, state) + ` = ${input.associatedVariableName}.xyz;\\r\\n`;\r\n            }\r\n        }\r\n        if (xyOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(xyOutput, state) + ` = ${input.associatedVariableName}.xy;\\r\\n`;\r\n        }\r\n        if (xOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(xOutput, state) + ` = ${input.associatedVariableName}.x;\\r\\n`;\r\n        }\r\n        if (yOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(yOutput, state) + ` = ${input.associatedVariableName}.y;\\r\\n`;\r\n        }\r\n        if (zOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(zOutput, state) + ` = ${input.associatedVariableName}.z;\\r\\n`;\r\n        }\r\n        if (wOutput.hasEndpoints) {\r\n            state.compilationString += this._declareOutput(wOutput, state) + ` = ${input.associatedVariableName}.w;\\r\\n`;\r\n        }\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.VectorSplitterBlock\"] = VectorSplitterBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}