{"ast":null,"code":"/**\r\n * \"Static Class\" containing a few commonly used helper while dealing with material for rendering purpose.\r\n *\r\n * It is complementary with MaterialHelper but provides completely independent functions (for tree shaking sake)\r\n *\r\n * This works by convention in BabylonJS but is meant to be use only with shader following the in place naming rules and conventions.\r\n */\nvar ThinMaterialHelper =\n/** @class */\nfunction () {\n  function ThinMaterialHelper() {}\n  /**\r\n   * Binds the clip plane information from the holder to the effect.\r\n   * @param effect The effect we are binding the data to\r\n   * @param holder The entity containing the clip plane information\r\n   */\n\n\n  ThinMaterialHelper.BindClipPlane = function (effect, holder) {\n    if (holder.clipPlane) {\n      var clipPlane = holder.clipPlane;\n      effect.setFloat4(\"vClipPlane\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane2) {\n      var clipPlane = holder.clipPlane2;\n      effect.setFloat4(\"vClipPlane2\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane3) {\n      var clipPlane = holder.clipPlane3;\n      effect.setFloat4(\"vClipPlane3\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane4) {\n      var clipPlane = holder.clipPlane4;\n      effect.setFloat4(\"vClipPlane4\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane5) {\n      var clipPlane = holder.clipPlane5;\n      effect.setFloat4(\"vClipPlane5\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n\n    if (holder.clipPlane6) {\n      var clipPlane = holder.clipPlane6;\n      effect.setFloat4(\"vClipPlane6\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\n    }\n  };\n\n  return ThinMaterialHelper;\n}();\n\nexport { ThinMaterialHelper };","map":{"version":3,"sources":["../../../sourceES6/core/Materials/thinMaterialHelper.ts"],"names":[],"mappings":"AAGA;;;;;;;AAOA,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA,CAgCC;AA/BG;;;;;;;AAKc,EAAA,kBAAA,CAAA,aAAA,GAAd,UAA4B,MAA5B,EAA4C,MAA5C,EAAqE;AACjE,QAAI,MAAM,CAAC,SAAX,EAAsB;AAClB,UAAI,SAAS,GAAG,MAAM,CAAC,SAAvB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,YAAjB,EAA+B,SAAS,CAAC,MAAV,CAAiB,CAAhD,EAAmD,SAAS,CAAC,MAAV,CAAiB,CAApE,EAAuE,SAAS,CAAC,MAAV,CAAiB,CAAxF,EAA2F,SAAS,CAAC,CAArG;AACH;;AACD,QAAI,MAAM,CAAC,UAAX,EAAuB;AACnB,UAAI,SAAS,GAAG,MAAM,CAAC,UAAvB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,EAAgC,SAAS,CAAC,MAAV,CAAiB,CAAjD,EAAoD,SAAS,CAAC,MAAV,CAAiB,CAArE,EAAwE,SAAS,CAAC,MAAV,CAAiB,CAAzF,EAA4F,SAAS,CAAC,CAAtG;AACH;;AACD,QAAI,MAAM,CAAC,UAAX,EAAuB;AACnB,UAAI,SAAS,GAAG,MAAM,CAAC,UAAvB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,EAAgC,SAAS,CAAC,MAAV,CAAiB,CAAjD,EAAoD,SAAS,CAAC,MAAV,CAAiB,CAArE,EAAwE,SAAS,CAAC,MAAV,CAAiB,CAAzF,EAA4F,SAAS,CAAC,CAAtG;AACH;;AACD,QAAI,MAAM,CAAC,UAAX,EAAuB;AACnB,UAAI,SAAS,GAAG,MAAM,CAAC,UAAvB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,EAAgC,SAAS,CAAC,MAAV,CAAiB,CAAjD,EAAoD,SAAS,CAAC,MAAV,CAAiB,CAArE,EAAwE,SAAS,CAAC,MAAV,CAAiB,CAAzF,EAA4F,SAAS,CAAC,CAAtG;AACH;;AACD,QAAI,MAAM,CAAC,UAAX,EAAuB;AACnB,UAAI,SAAS,GAAG,MAAM,CAAC,UAAvB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,EAAgC,SAAS,CAAC,MAAV,CAAiB,CAAjD,EAAoD,SAAS,CAAC,MAAV,CAAiB,CAArE,EAAwE,SAAS,CAAC,MAAV,CAAiB,CAAzF,EAA4F,SAAS,CAAC,CAAtG;AACH;;AACD,QAAI,MAAM,CAAC,UAAX,EAAuB;AACnB,UAAI,SAAS,GAAG,MAAM,CAAC,UAAvB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,aAAjB,EAAgC,SAAS,CAAC,MAAV,CAAiB,CAAjD,EAAoD,SAAS,CAAC,MAAV,CAAiB,CAArE,EAAwE,SAAS,CAAC,MAAV,CAAiB,CAAzF,EAA4F,SAAS,CAAC,CAAtG;AACH;AACJ,GAzBa;;AA0BlB,SAAA,kBAAA;AAAC,CAhCD,EAAA","sourcesContent":["import { Effect } from './effect';\r\nimport { IClipPlanesHolder } from '../Misc/interfaces/iClipPlanesHolder';\r\n\r\n/**\r\n * \"Static Class\" containing a few commonly used helper while dealing with material for rendering purpose.\r\n *\r\n * It is complementary with MaterialHelper but provides completely independent functions (for tree shaking sake)\r\n *\r\n * This works by convention in BabylonJS but is meant to be use only with shader following the in place naming rules and conventions.\r\n */\r\nexport class ThinMaterialHelper {\r\n    /**\r\n     * Binds the clip plane information from the holder to the effect.\r\n     * @param effect The effect we are binding the data to\r\n     * @param holder The entity containing the clip plane information\r\n     */\r\n    public static BindClipPlane(effect: Effect, holder: IClipPlanesHolder): void {\r\n        if (holder.clipPlane) {\r\n            let clipPlane = holder.clipPlane;\r\n            effect.setFloat4(\"vClipPlane\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n        }\r\n        if (holder.clipPlane2) {\r\n            let clipPlane = holder.clipPlane2;\r\n            effect.setFloat4(\"vClipPlane2\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n        }\r\n        if (holder.clipPlane3) {\r\n            let clipPlane = holder.clipPlane3;\r\n            effect.setFloat4(\"vClipPlane3\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n        }\r\n        if (holder.clipPlane4) {\r\n            let clipPlane = holder.clipPlane4;\r\n            effect.setFloat4(\"vClipPlane4\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n        }\r\n        if (holder.clipPlane5) {\r\n            let clipPlane = holder.clipPlane5;\r\n            effect.setFloat4(\"vClipPlane5\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n        }\r\n        if (holder.clipPlane6) {\r\n            let clipPlane = holder.clipPlane6;\r\n            effect.setFloat4(\"vClipPlane6\", clipPlane.normal.x, clipPlane.normal.y, clipPlane.normal.z, clipPlane.d);\r\n        }\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}