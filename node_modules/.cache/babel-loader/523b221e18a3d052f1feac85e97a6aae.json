{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Camera } from \"../../Cameras/camera\";\nimport { UniversalCamera } from \"../../Cameras/universalCamera\";\nimport { Vector3 } from \"../../Maths/math.vector\";\nimport { Node } from \"../../node\"; // Side effect import to define the stereoscopic mode.\n\nimport \"../RigModes/stereoscopicAnaglyphRigMode\";\nNode.AddNodeConstructor(\"AnaglyphUniversalCamera\", function (name, scene, options) {\n  return function () {\n    return new AnaglyphUniversalCamera(name, Vector3.Zero(), options.interaxial_distance, scene);\n  };\n});\n/**\r\n * Camera used to simulate anaglyphic rendering (based on UniversalCamera)\r\n * @see https://doc.babylonjs.com/features/cameras#anaglyph-cameras\r\n */\n\nvar AnaglyphUniversalCamera =\n/** @class */\nfunction (_super) {\n  __extends(AnaglyphUniversalCamera, _super);\n  /**\r\n   * Creates a new AnaglyphUniversalCamera\r\n   * @param name defines camera name\r\n   * @param position defines initial position\r\n   * @param interaxialDistance defines distance between each color axis\r\n   * @param scene defines the hosting scene\r\n   */\n\n\n  function AnaglyphUniversalCamera(name, position, interaxialDistance, scene) {\n    var _this = _super.call(this, name, position, scene) || this;\n\n    _this.interaxialDistance = interaxialDistance;\n\n    _this.setCameraRigMode(Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH, {\n      interaxialDistance: interaxialDistance\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets camera class name\r\n   * @returns AnaglyphUniversalCamera\r\n   */\n\n\n  AnaglyphUniversalCamera.prototype.getClassName = function () {\n    return \"AnaglyphUniversalCamera\";\n  };\n\n  return AnaglyphUniversalCamera;\n}(UniversalCamera);\n\nexport { AnaglyphUniversalCamera };","map":{"version":3,"sources":["../../../../sourceES6/core/Cameras/Stereoscopic/anaglyphUniversalCamera.ts"],"names":[],"mappings":";AAAA,SAAS,MAAT,QAAuB,sBAAvB;AACA,SAAS,eAAT,QAAgC,+BAAhC;AAEA,SAAS,OAAT,QAAwB,yBAAxB;AACA,SAAS,IAAT,QAAqB,YAArB,C,CAEA;;AACA,OAAO,yCAAP;AAEA,IAAI,CAAC,kBAAL,CAAwB,yBAAxB,EAAmD,UAAC,IAAD,EAAO,KAAP,EAAc,OAAd,EAAqB;AACpE,SAAO,YAAA;AAAM,WAAA,IAAI,uBAAJ,CAA4B,IAA5B,EAAkC,OAAO,CAAC,IAAR,EAAlC,EAAkD,OAAO,CAAC,mBAA1D,EAAA,KAAA,CAAA;AAAqF,GAAlG;AACH,CAFD;AAIA;;;;;AAIA,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;AACzC;;;;;;;;;AAOA,WAAA,uBAAA,CAAY,IAAZ,EAA0B,QAA1B,EAA6C,kBAA7C,EAAyE,KAAzE,EAAqF;AAArF,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,KAA4B,IADhC;;AAEI,IAAA,KAAI,CAAC,kBAAL,GAA0B,kBAA1B;;AACA,IAAA,KAAI,CAAC,gBAAL,CAAsB,MAAM,CAAC,8BAA7B,EAA6D;AAAE,MAAA,kBAAkB,EAAE;AAAtB,KAA7D;;;AACH;AAED;;;;;;AAIO,EAAA,uBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,yBAAP;AACH,GAFM;;AAGX,SAAA,uBAAA;AAAC,CArBD,CAA6C,eAA7C,CAAA","sourcesContent":["import { Camera } from \"../../Cameras/camera\";\r\nimport { UniversalCamera } from \"../../Cameras/universalCamera\";\r\nimport { Scene } from \"../../scene\";\r\nimport { Vector3 } from \"../../Maths/math.vector\";\r\nimport { Node } from \"../../node\";\r\n\r\n// Side effect import to define the stereoscopic mode.\r\nimport \"../RigModes/stereoscopicAnaglyphRigMode\";\r\n\r\nNode.AddNodeConstructor(\"AnaglyphUniversalCamera\", (name, scene, options) => {\r\n    return () => new AnaglyphUniversalCamera(name, Vector3.Zero(), options.interaxial_distance, scene);\r\n});\r\n\r\n/**\r\n * Camera used to simulate anaglyphic rendering (based on UniversalCamera)\r\n * @see https://doc.babylonjs.com/features/cameras#anaglyph-cameras\r\n */\r\nexport class AnaglyphUniversalCamera extends UniversalCamera {\r\n    /**\r\n     * Creates a new AnaglyphUniversalCamera\r\n     * @param name defines camera name\r\n     * @param position defines initial position\r\n     * @param interaxialDistance defines distance between each color axis\r\n     * @param scene defines the hosting scene\r\n     */\r\n    constructor(name: string, position: Vector3, interaxialDistance: number, scene: Scene) {\r\n        super(name, position, scene);\r\n        this.interaxialDistance = interaxialDistance;\r\n        this.setCameraRigMode(Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH, { interaxialDistance: interaxialDistance });\r\n    }\r\n\r\n    /**\r\n     * Gets camera class name\r\n     * @returns AnaglyphUniversalCamera\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphUniversalCamera\";\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}