{"ast":null,"code":"import { StringTools } from './stringTools';\nimport { Logger } from './logger';\n\nvar cloneValue = function (source, destinationObject) {\n  if (!source) {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"Mesh\") {\n    return null;\n  }\n\n  if (source.getClassName && source.getClassName() === \"SubMesh\") {\n    return source.clone(destinationObject);\n  } else if (source.clone) {\n    return source.clone();\n  }\n\n  return null;\n};\n\nfunction getAllPropertyNames(obj) {\n  var props = [];\n\n  do {\n    Object.getOwnPropertyNames(obj).forEach(function (prop) {\n      if (props.indexOf(prop) === -1) {\n        props.push(prop);\n      }\n    });\n  } while (obj = Object.getPrototypeOf(obj));\n\n  return props;\n}\n/**\r\n * Class containing a set of static utilities functions for deep copy.\r\n */\n\n\nvar DeepCopier =\n/** @class */\nfunction () {\n  function DeepCopier() {}\n  /**\r\n   * Tries to copy an object by duplicating every property\r\n   * @param source defines the source object\r\n   * @param destination defines the target object\r\n   * @param doNotCopyList defines a list of properties to avoid\r\n   * @param mustCopyList defines a list of properties to copy (even if they start with _)\r\n   */\n\n\n  DeepCopier.DeepCopy = function (source, destination, doNotCopyList, mustCopyList) {\n    var proerties = getAllPropertyNames(source);\n\n    for (var _i = 0, proerties_1 = proerties; _i < proerties_1.length; _i++) {\n      var prop = proerties_1[_i];\n\n      if (prop[0] === \"_\" && (!mustCopyList || mustCopyList.indexOf(prop) === -1)) {\n        continue;\n      }\n\n      if (StringTools.EndsWith(prop, \"Observable\")) {\n        continue;\n      }\n\n      if (doNotCopyList && doNotCopyList.indexOf(prop) !== -1) {\n        continue;\n      }\n\n      var sourceValue = source[prop];\n      var typeOfSourceValue = typeof sourceValue;\n\n      if (typeOfSourceValue === \"function\") {\n        continue;\n      }\n\n      try {\n        if (typeOfSourceValue === \"object\") {\n          if (sourceValue instanceof Array) {\n            destination[prop] = [];\n\n            if (sourceValue.length > 0) {\n              if (typeof sourceValue[0] == \"object\") {\n                for (var index = 0; index < sourceValue.length; index++) {\n                  var clonedValue = cloneValue(sourceValue[index], destination);\n\n                  if (destination[prop].indexOf(clonedValue) === -1) {\n                    // Test if auto inject was not done\n                    destination[prop].push(clonedValue);\n                  }\n                }\n              } else {\n                destination[prop] = sourceValue.slice(0);\n              }\n            }\n          } else {\n            destination[prop] = cloneValue(sourceValue, destination);\n          }\n        } else {\n          destination[prop] = sourceValue;\n        }\n      } catch (e) {\n        // Log a warning (it could be because of a read-only property)\n        Logger.Warn(e.message);\n      }\n    }\n  };\n\n  return DeepCopier;\n}();\n\nexport { DeepCopier };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/deepCopier.ts"],"names":[],"mappings":"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","sourcesContent":["import { StringTools } from './stringTools';\r\nimport { Logger } from './logger';\r\n\r\nvar cloneValue = (source: any, destinationObject: any) => {\r\n    if (!source) {\r\n        return null;\r\n    }\r\n\r\n    if (source.getClassName && source.getClassName() === \"Mesh\") {\r\n        return null;\r\n    }\r\n\r\n    if (source.getClassName && source.getClassName() === \"SubMesh\") {\r\n        return source.clone(destinationObject);\r\n    } else if (source.clone) {\r\n        return source.clone();\r\n    }\r\n    return null;\r\n};\r\n\r\nfunction getAllPropertyNames(obj: any): string[] {\r\n    const props: string[] = [];\r\n\r\n    do {\r\n        Object.getOwnPropertyNames(obj).forEach(function(prop) {\r\n            if (props.indexOf(prop) === -1) {\r\n                props.push(prop);\r\n            }\r\n        });\r\n    } while (obj = Object.getPrototypeOf(obj));\r\n\r\n    return props;\r\n}\r\n\r\n/**\r\n * Class containing a set of static utilities functions for deep copy.\r\n */\r\nexport class DeepCopier {\r\n    /**\r\n     * Tries to copy an object by duplicating every property\r\n     * @param source defines the source object\r\n     * @param destination defines the target object\r\n     * @param doNotCopyList defines a list of properties to avoid\r\n     * @param mustCopyList defines a list of properties to copy (even if they start with _)\r\n     */\r\n    public static DeepCopy(source: any, destination: any, doNotCopyList?: string[], mustCopyList?: string[]): void {\r\n        const proerties = getAllPropertyNames(source);\r\n        for (var prop of proerties) {\r\n\r\n            if (prop[0] === \"_\" && (!mustCopyList || mustCopyList.indexOf(prop) === -1)) {\r\n                continue;\r\n            }\r\n\r\n            if (StringTools.EndsWith(prop, \"Observable\")) {\r\n                continue;\r\n            }\r\n\r\n            if (doNotCopyList && doNotCopyList.indexOf(prop) !== -1) {\r\n                continue;\r\n            }\r\n\r\n            var sourceValue = source[prop];\r\n            var typeOfSourceValue = typeof sourceValue;\r\n\r\n            if (typeOfSourceValue === \"function\") {\r\n                continue;\r\n            }\r\n\r\n            try {\r\n                if (typeOfSourceValue === \"object\") {\r\n                    if (sourceValue instanceof Array) {\r\n                        destination[prop] = [];\r\n\r\n                        if (sourceValue.length > 0) {\r\n                            if (typeof sourceValue[0] == \"object\") {\r\n                                for (var index = 0; index < sourceValue.length; index++) {\r\n                                    var clonedValue = cloneValue(sourceValue[index], destination);\r\n\r\n                                    if (destination[prop].indexOf(clonedValue) === -1) { // Test if auto inject was not done\r\n                                        destination[prop].push(clonedValue);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                destination[prop] = sourceValue.slice(0);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        destination[prop] = cloneValue(sourceValue, destination);\r\n                    }\r\n                } else {\r\n                    destination[prop] = sourceValue;\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Log a warning (it could be because of a read-only property)\r\n                Logger.Warn(e.message);\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}