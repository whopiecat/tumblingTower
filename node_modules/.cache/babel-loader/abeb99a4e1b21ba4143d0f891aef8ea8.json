{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Texture } from \"../Materials/Textures/texture\";\nimport { PostProcess } from \"./postProcess\";\nimport \"../Shaders/fxaa.fragment\";\nimport \"../Shaders/fxaa.vertex\";\nimport { _TypeStore } from '../Misc/typeStore';\nimport { SerializationHelper } from '../Misc/decorators';\n/**\r\n * Fxaa post process\r\n * @see https://doc.babylonjs.com/how_to/how_to_use_postprocesses#fxaa\r\n */\n\nvar FxaaPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(FxaaPostProcess, _super);\n\n  function FxaaPostProcess(name, options, camera, samplingMode, engine, reusable, textureType) {\n    if (camera === void 0) {\n      camera = null;\n    }\n\n    if (textureType === void 0) {\n      textureType = 0;\n    }\n\n    var _this = _super.call(this, name, \"fxaa\", [\"texelSize\"], null, options, camera, samplingMode || Texture.BILINEAR_SAMPLINGMODE, engine, reusable, null, textureType, \"fxaa\", undefined, true) || this;\n\n    var defines = _this._getDefines();\n\n    _this.updateEffect(defines);\n\n    _this.onApplyObservable.add(function (effect) {\n      var texelSize = _this.texelSize;\n      effect.setFloat2(\"texelSize\", texelSize.x, texelSize.y);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets a string identifying the name of the class\r\n   * @returns \"FxaaPostProcess\" string\r\n   */\n\n\n  FxaaPostProcess.prototype.getClassName = function () {\n    return \"FxaaPostProcess\";\n  };\n\n  FxaaPostProcess.prototype._getDefines = function () {\n    var engine = this.getEngine();\n\n    if (!engine) {\n      return null;\n    }\n\n    var glInfo = engine.getGlInfo();\n\n    if (glInfo && glInfo.renderer && glInfo.renderer.toLowerCase().indexOf(\"mali\") > -1) {\n      return \"#define MALI 1\\n\";\n    }\n\n    return null;\n  };\n  /** @hidden */\n\n\n  FxaaPostProcess._Parse = function (parsedPostProcess, targetCamera, scene, rootUrl) {\n    return SerializationHelper.Parse(function () {\n      return new FxaaPostProcess(parsedPostProcess.name, parsedPostProcess.options, targetCamera, parsedPostProcess.renderTargetSamplingMode, scene.getEngine(), parsedPostProcess.reusable);\n    }, parsedPostProcess, scene, rootUrl);\n  };\n\n  return FxaaPostProcess;\n}(PostProcess);\n\nexport { FxaaPostProcess };\n_TypeStore.RegisteredTypes[\"BABYLON.FxaaPostProcess\"] = FxaaPostProcess;","map":{"version":3,"sources":["../../../sourceES6/core/PostProcesses/fxaaPostProcess.ts"],"names":[],"mappings":";AAGA,SAAS,OAAT,QAAwB,+BAAxB;AACA,SAAS,WAAT,QAAgD,eAAhD;AAIA,OAAO,0BAAP;AACA,OAAO,wBAAP;AACA,SAAS,UAAT,QAA2B,mBAA3B;AACA,SAAS,mBAAT,QAAoC,oBAApC;AAGA;;;;;AAIA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AASjC,WAAA,eAAA,CAAY,IAAZ,EAA0B,OAA1B,EAAgE,MAAhE,EAAiG,YAAjG,EAAwH,MAAxH,EAAyI,QAAzI,EAA6J,WAA7J,EAAoL;AAApH,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,IAAA;AAA+B;;AAA8D,QAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,WAAA,GAAA,CAAA;AAAuB;;AAApL,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,MAAZ,EAAoB,CAAC,WAAD,CAApB,EAAmC,IAAnC,EAAyC,OAAzC,EAAkD,MAAlD,EAA0D,YAAY,IAAI,OAAO,CAAC,qBAAlF,EAAyG,MAAzG,EAAiH,QAAjH,EAA2H,IAA3H,EAAiI,WAAjI,EAA8I,MAA9I,EAAsJ,SAAtJ,EAAiK,IAAjK,KAAsK,IAD1K;;AAGI,QAAM,OAAO,GAAG,KAAI,CAAC,WAAL,EAAhB;;AACA,IAAA,KAAI,CAAC,YAAL,CAAkB,OAAlB;;AAEA,IAAA,KAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,UAAC,MAAD,EAAe;AACtC,UAAI,SAAS,GAAG,KAAI,CAAC,SAArB;AACA,MAAA,MAAM,CAAC,SAAP,CAAiB,WAAjB,EAA8B,SAAS,CAAC,CAAxC,EAA2C,SAAS,CAAC,CAArD;AACH,KAHD;;;AAIH;AAlBD;;;;;;AAIO,EAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,iBAAP;AACH,GAFM;;AAgBC,EAAA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAR,YAAA;AACI,QAAM,MAAM,GAAG,KAAK,SAAL,EAAf;;AACA,QAAI,CAAC,MAAL,EAAa;AACT,aAAO,IAAP;AACH;;AAED,QAAM,MAAM,GAAG,MAAM,CAAC,SAAP,EAAf;;AACA,QAAI,MAAM,IAAI,MAAM,CAAC,QAAjB,IAA6B,MAAM,CAAC,QAAP,CAAgB,WAAhB,GAA8B,OAA9B,CAAsC,MAAtC,IAAgD,CAAC,CAAlF,EAAqF;AACjF,aAAO,kBAAP;AACH;;AAED,WAAO,IAAP;AACH,GAZO;AAcR;;;AACc,EAAA,eAAA,CAAA,MAAA,GAAd,UAAqB,iBAArB,EAA6C,YAA7C,EAAmE,KAAnE,EAAiF,OAAjF,EAAgG;AAC5F,WAAO,mBAAmB,CAAC,KAApB,CAA0B,YAAA;AAC7B,aAAO,IAAI,eAAJ,CACH,iBAAiB,CAAC,IADf,EAEH,iBAAiB,CAAC,OAFf,EAEwB,YAFxB,EAGH,iBAAiB,CAAC,wBAHf,EAIH,KAAK,CAAC,SAAN,EAJG,EAIgB,iBAAiB,CAAC,QAJlC,CAAP;AAKH,KANM,EAMJ,iBANI,EAMe,KANf,EAMsB,OANtB,CAAP;AAOH,GARa;;AASlB,SAAA,eAAA;AAAC,CA7CD,CAAqC,WAArC,CAAA;;;AA+CA,UAAU,CAAC,eAAX,CAA2B,yBAA3B,IAAwD,eAAxD","sourcesContent":["import { Nullable } from \"../types\";\r\nimport { Camera } from \"../Cameras/camera\";\r\nimport { Effect } from \"../Materials/effect\";\r\nimport { Texture } from \"../Materials/Textures/texture\";\r\nimport { PostProcess, PostProcessOptions } from \"./postProcess\";\r\nimport { Engine } from \"../Engines/engine\";\r\n\r\n\r\nimport \"../Shaders/fxaa.fragment\";\r\nimport \"../Shaders/fxaa.vertex\";\r\nimport { _TypeStore } from '../Misc/typeStore';\r\nimport { SerializationHelper } from '../Misc/decorators';\r\n\r\ndeclare type Scene = import(\"../scene\").Scene;\r\n/**\r\n * Fxaa post process\r\n * @see https://doc.babylonjs.com/how_to/how_to_use_postprocesses#fxaa\r\n */\r\nexport class FxaaPostProcess extends PostProcess {\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"FxaaPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"FxaaPostProcess\";\r\n    }\r\n\r\n    constructor(name: string, options: number | PostProcessOptions, camera: Nullable<Camera> = null, samplingMode?: number, engine?: Engine, reusable?: boolean, textureType: number = 0) {\r\n        super(name, \"fxaa\", [\"texelSize\"], null, options, camera, samplingMode || Texture.BILINEAR_SAMPLINGMODE, engine, reusable, null, textureType, \"fxaa\", undefined, true);\r\n\r\n        const defines = this._getDefines();\r\n        this.updateEffect(defines);\r\n\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            var texelSize = this.texelSize;\r\n            effect.setFloat2(\"texelSize\", texelSize.x, texelSize.y);\r\n        });\r\n    }\r\n\r\n    private _getDefines(): Nullable<string> {\r\n        const engine = this.getEngine();\r\n        if (!engine) {\r\n            return null;\r\n        }\r\n\r\n        const glInfo = engine.getGlInfo();\r\n        if (glInfo && glInfo.renderer && glInfo.renderer.toLowerCase().indexOf(\"mali\") > -1) {\r\n            return \"#define MALI 1\\n\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /** @hidden */\r\n    public static _Parse(parsedPostProcess: any, targetCamera: Camera, scene: Scene, rootUrl: string) {\r\n        return SerializationHelper.Parse(() => {\r\n            return new FxaaPostProcess(\r\n                parsedPostProcess.name,\r\n                parsedPostProcess.options, targetCamera,\r\n                parsedPostProcess.renderTargetSamplingMode,\r\n                scene.getEngine(), parsedPostProcess.reusable);\r\n        }, parsedPostProcess, scene, rootUrl);\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.FxaaPostProcess\"] = FxaaPostProcess;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}