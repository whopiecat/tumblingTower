{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PostProcess } from \"./postProcess\";\nimport \"../Shaders/anaglyph.fragment\";\nimport { _TypeStore } from '../Misc/typeStore';\n/**\r\n * Postprocess used to generate anaglyphic rendering\r\n */\n\nvar AnaglyphPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(AnaglyphPostProcess, _super);\n  /**\r\n   * Creates a new AnaglyphPostProcess\r\n   * @param name defines postprocess name\r\n   * @param options defines creation options or target ratio scale\r\n   * @param rigCameras defines cameras using this postprocess\r\n   * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\r\n   * @param engine defines hosting engine\r\n   * @param reusable defines if the postprocess will be reused multiple times per frame\r\n   */\n\n\n  function AnaglyphPostProcess(name, options, rigCameras, samplingMode, engine, reusable) {\n    var _this = _super.call(this, name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable) || this;\n\n    _this._passedProcess = rigCameras[0]._rigPostProcess;\n\n    _this.onApplyObservable.add(function (effect) {\n      effect.setTextureFromPostProcess(\"leftSampler\", _this._passedProcess);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets a string identifying the name of the class\r\n   * @returns \"AnaglyphPostProcess\" string\r\n   */\n\n\n  AnaglyphPostProcess.prototype.getClassName = function () {\n    return \"AnaglyphPostProcess\";\n  };\n\n  return AnaglyphPostProcess;\n}(PostProcess);\n\nexport { AnaglyphPostProcess };\n_TypeStore.RegisteredTypes[\"BABYLON.AnaglyphPostProcess\"] = AnaglyphPostProcess;","map":{"version":3,"sources":["../../../sourceES6/core/PostProcesses/anaglyphPostProcess.ts"],"names":[],"mappings":";AAEA,SAAS,WAAT,QAAgD,eAAhD;AAIA,OAAO,8BAAP;AACA,SAAS,UAAT,QAA2B,mBAA3B;AAEA;;;;AAGA,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;AAWrC;;;;;;;;;;;AASA,WAAA,mBAAA,CAAY,IAAZ,EAA0B,OAA1B,EAAgE,UAAhE,EAAsF,YAAtF,EAA6G,MAA7G,EAA8H,QAA9H,EAAgJ;AAAhJ,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,UAAZ,EAAwB,IAAxB,EAA8B,CAAC,aAAD,CAA9B,EAA+C,OAA/C,EAAwD,UAAU,CAAC,CAAD,CAAlE,EAAuE,YAAvE,EAAqF,MAArF,EAA6F,QAA7F,KAAsG,IAD1G;;AAEI,IAAA,KAAI,CAAC,cAAL,GAAsB,UAAU,CAAC,CAAD,CAAV,CAAc,eAApC;;AAEA,IAAA,KAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,UAAC,MAAD,EAAe;AACtC,MAAA,MAAM,CAAC,yBAAP,CAAiC,aAAjC,EAAgD,KAAI,CAAC,cAArD;AACH,KAFD;;;AAGH;AAxBD;;;;;;AAIO,EAAA,mBAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,qBAAP;AACH,GAFM;;AAqBX,SAAA,mBAAA;AAAC,CA5BD,CAAyC,WAAzC,CAAA;;;AA8BA,UAAU,CAAC,eAAX,CAA2B,6BAA3B,IAA4D,mBAA5D","sourcesContent":["import { Nullable } from \"../types\";\r\nimport { Engine } from \"../Engines/engine\";\r\nimport { PostProcess, PostProcessOptions } from \"./postProcess\";\r\nimport { Camera } from \"../Cameras/camera\";\r\nimport { Effect } from \"../Materials/effect\";\r\n\r\nimport \"../Shaders/anaglyph.fragment\";\r\nimport { _TypeStore } from '../Misc/typeStore';\r\n\r\n/**\r\n * Postprocess used to generate anaglyphic rendering\r\n */\r\nexport class AnaglyphPostProcess extends PostProcess {\r\n    private _passedProcess: Nullable<PostProcess>;\r\n\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"AnaglyphPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphPostProcess\";\r\n    }\r\n\r\n    /**\r\n     * Creates a new AnaglyphPostProcess\r\n     * @param name defines postprocess name\r\n     * @param options defines creation options or target ratio scale\r\n     * @param rigCameras defines cameras using this postprocess\r\n     * @param samplingMode defines required sampling mode (BABYLON.Texture.NEAREST_SAMPLINGMODE by default)\r\n     * @param engine defines hosting engine\r\n     * @param reusable defines if the postprocess will be reused multiple times per frame\r\n     */\r\n    constructor(name: string, options: number | PostProcessOptions, rigCameras: Camera[], samplingMode?: number, engine?: Engine, reusable?: boolean) {\r\n        super(name, \"anaglyph\", null, [\"leftSampler\"], options, rigCameras[1], samplingMode, engine, reusable);\r\n        this._passedProcess = rigCameras[0]._rigPostProcess;\r\n\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            effect.setTextureFromPostProcess(\"leftSampler\", this._passedProcess);\r\n        });\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.AnaglyphPostProcess\"] = AnaglyphPostProcess;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}