{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\r\n * @ignore\r\n * Application error to support additional information when loading a file\r\n */\n\nvar BaseError =\n/** @class */\nfunction (_super) {\n  __extends(BaseError, _super);\n\n  function BaseError() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // See https://stackoverflow.com/questions/12915412/how-do-i-extend-a-host-object-e-g-error-in-typescript\n  // and https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n  // Polyfill for Object.setPrototypeOf if necessary.\n\n\n  BaseError._setPrototypeOf = Object.setPrototypeOf || function (o, proto) {\n    o.__proto__ = proto;\n    return o;\n  };\n\n  return BaseError;\n}(Error);\n\nexport { BaseError };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/baseError.ts"],"names":[],"mappings":";AAAA;;;;;AAIA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwC,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAAxC,WAAA,SAAA,GAAA;;AAOC,GAPD,CACI;AACA;AAEA;;;AACiB,EAAA,SAAA,CAAA,eAAA,GACZ,MAAc,CAAC,cAAf,IAAkC,UAAC,CAAD,EAAI,KAAJ,EAAS;AAAO,IAAA,CAAC,CAAC,SAAF,GAAc,KAAd;AAAqB,WAAO,CAAP;AAAW,GADtE;;AAErB,SAAA,SAAA;AAAC,CAPD,CAAwC,KAAxC,CAAA;;SAAsB,S","sourcesContent":["/**\r\n * @ignore\r\n * Application error to support additional information when loading a file\r\n */\r\nexport abstract class BaseError extends Error {\r\n    // See https://stackoverflow.com/questions/12915412/how-do-i-extend-a-host-object-e-g-error-in-typescript\r\n    // and https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n\r\n    // Polyfill for Object.setPrototypeOf if necessary.\r\n    protected static _setPrototypeOf: (o: any, proto: object | null) => any =\r\n        (Object as any).setPrototypeOf || ((o, proto) => { o.__proto__ = proto; return o; });\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}