{"ast":null,"code":"/**\r\n * Root class for all node material optimizers\r\n */\nvar NodeMaterialOptimizer =\n/** @class */\nfunction () {\n  function NodeMaterialOptimizer() {}\n  /**\r\n   * Function used to optimize a NodeMaterial graph\r\n   * @param vertexOutputNodes defines the list of output nodes for the vertex shader\r\n   * @param fragmentOutputNodes defines the list of output nodes for the fragment shader\r\n   */\n\n\n  NodeMaterialOptimizer.prototype.optimize = function (vertexOutputNodes, fragmentOutputNodes) {// Do nothing by default\n  };\n\n  return NodeMaterialOptimizer;\n}();\n\nexport { NodeMaterialOptimizer };","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Optimizers/nodeMaterialOptimizer.ts"],"names":[],"mappings":"AAEA;;;AAGA,IAAA,qBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,qBAAA,GAAA,CASC;AARG;;;;;;;AAKO,EAAA,qBAAA,CAAA,SAAA,CAAA,QAAA,GAAP,UAAgB,iBAAhB,EAAwD,mBAAxD,EAAgG,CAC5F;AACH,GAFM;;AAGX,SAAA,qBAAA;AAAC,CATD,EAAA","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\n\r\n/**\r\n * Root class for all node material optimizers\r\n */\r\nexport class NodeMaterialOptimizer {\r\n    /**\r\n     * Function used to optimize a NodeMaterial graph\r\n     * @param vertexOutputNodes defines the list of output nodes for the vertex shader\r\n     * @param fragmentOutputNodes defines the list of output nodes for the fragment shader\r\n     */\r\n    public optimize(vertexOutputNodes: NodeMaterialBlock[], fragmentOutputNodes: NodeMaterialBlock[]) {\r\n        // Do nothing by default\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}