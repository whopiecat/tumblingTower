{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { UniversalCamera } from \"./universalCamera\";\nimport { Vector3 } from \"../Maths/math.vector\";\nimport { Node } from \"../node\";\nNode.AddNodeConstructor(\"GamepadCamera\", function (name, scene) {\n  return function () {\n    return new GamepadCamera(name, Vector3.Zero(), scene);\n  };\n});\n/**\r\n * This represents a FPS type of camera. This is only here for back compat purpose.\r\n * Please use the UniversalCamera instead as both are identical.\r\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n */\n\nvar GamepadCamera =\n/** @class */\nfunction (_super) {\n  __extends(GamepadCamera, _super);\n  /**\r\n   * Instantiates a new Gamepad Camera\r\n   * This represents a FPS type of camera. This is only here for back compat purpose.\r\n   * Please use the UniversalCamera instead as both are identical.\r\n   * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n   * @param name Define the name of the camera in the scene\r\n   * @param position Define the start position of the camera in the scene\r\n   * @param scene Define the scene the camera belongs to\r\n   */\n\n\n  function GamepadCamera(name, position, scene) {\n    return _super.call(this, name, position, scene) || this;\n  }\n  /**\r\n   * Gets the current object class name.\r\n   * @return the class name\r\n   */\n\n\n  GamepadCamera.prototype.getClassName = function () {\n    return \"GamepadCamera\";\n  };\n\n  return GamepadCamera;\n}(UniversalCamera);\n\nexport { GamepadCamera };","map":{"version":3,"sources":["../../../sourceES6/core/Cameras/gamepadCamera.ts"],"names":[],"mappings":";AAAA,SAAS,eAAT,QAAgC,mBAAhC;AAEA,SAAS,OAAT,QAAwB,sBAAxB;AACA,SAAS,IAAT,QAAqB,SAArB;AACA,IAAI,CAAC,kBAAL,CAAwB,eAAxB,EAAyC,UAAC,IAAD,EAAO,KAAP,EAAY;AACjD,SAAO,YAAA;AAAM,WAAA,IAAI,aAAJ,CAAkB,IAAlB,EAAwB,OAAO,CAAC,IAAR,EAAxB,EAAA,KAAA,CAAA;AAA8C,GAA3D;AACH,CAFD;AAIA;;;;;;AAKA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmC,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;AAC/B;;;;;;;;;;;AASA,WAAA,aAAA,CAAY,IAAZ,EAA0B,QAA1B,EAA6C,KAA7C,EAAyD;WACrD,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,KAA4B,I;AAC/B;AAED;;;;;;AAIO,EAAA,aAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,eAAP;AACH,GAFM;;AAGX,SAAA,aAAA;AAAC,CArBD,CAAmC,eAAnC,CAAA","sourcesContent":["import { UniversalCamera } from \"./universalCamera\";\r\nimport { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Node } from \"../node\";\r\nNode.AddNodeConstructor(\"GamepadCamera\", (name, scene) => {\r\n    return () => new GamepadCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * This represents a FPS type of camera. This is only here for back compat purpose.\r\n * Please use the UniversalCamera instead as both are identical.\r\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n */\r\nexport class GamepadCamera extends UniversalCamera {\r\n    /**\r\n     * Instantiates a new Gamepad Camera\r\n     * This represents a FPS type of camera. This is only here for back compat purpose.\r\n     * Please use the UniversalCamera instead as both are identical.\r\n     * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene: Scene) {\r\n        super(name, position, scene);\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @return the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"GamepadCamera\";\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}