{"ast":null,"code":"import { __decorate, __extends } from \"tslib\";\nimport { PostProcess } from \"./postProcess\";\nimport { ToGammaSpace } from \"../Maths/math.constants\";\nimport \"../Shaders/extractHighlights.fragment\";\nimport { serialize } from '../Misc/decorators';\nimport { _TypeStore } from '../Misc/typeStore';\n/**\r\n * The extract highlights post process sets all pixels to black except pixels above the specified luminance threshold. Used as the first step for a bloom effect.\r\n */\n\nvar ExtractHighlightsPostProcess =\n/** @class */\nfunction (_super) {\n  __extends(ExtractHighlightsPostProcess, _super);\n\n  function ExtractHighlightsPostProcess(name, options, camera, samplingMode, engine, reusable, textureType, blockCompilation) {\n    if (textureType === void 0) {\n      textureType = 0;\n    }\n\n    if (blockCompilation === void 0) {\n      blockCompilation = false;\n    }\n\n    var _this = _super.call(this, name, \"extractHighlights\", [\"threshold\", \"exposure\"], null, options, camera, samplingMode, engine, reusable, null, textureType, undefined, null, blockCompilation) || this;\n    /**\r\n     * The luminance threshold, pixels below this value will be set to black.\r\n     */\n\n\n    _this.threshold = 0.9;\n    /** @hidden */\n\n    _this._exposure = 1;\n    /**\r\n     * Post process which has the input texture to be used when performing highlight extraction\r\n     * @hidden\r\n     */\n\n    _this._inputPostProcess = null;\n\n    _this.onApplyObservable.add(function (effect) {\n      if (_this._inputPostProcess) {\n        effect.setTextureFromPostProcess(\"textureSampler\", _this._inputPostProcess);\n      }\n\n      effect.setFloat('threshold', Math.pow(_this.threshold, ToGammaSpace));\n      effect.setFloat('exposure', _this._exposure);\n    });\n\n    return _this;\n  }\n  /**\r\n   * Gets a string identifying the name of the class\r\n   * @returns \"ExtractHighlightsPostProcess\" string\r\n   */\n\n\n  ExtractHighlightsPostProcess.prototype.getClassName = function () {\n    return \"ExtractHighlightsPostProcess\";\n  };\n\n  __decorate([serialize()], ExtractHighlightsPostProcess.prototype, \"threshold\", void 0);\n\n  return ExtractHighlightsPostProcess;\n}(PostProcess);\n\nexport { ExtractHighlightsPostProcess };\n_TypeStore.RegisteredTypes[\"BABYLON.ExtractHighlightsPostProcess\"] = ExtractHighlightsPostProcess;","map":{"version":3,"sources":["../../../sourceES6/core/PostProcesses/extractHighlightsPostProcess.ts"],"names":[],"mappings":";AAGA,SAAS,WAAT,QAAgD,eAAhD;AAEA,SAAS,YAAT,QAA6B,yBAA7B;AAGA,OAAO,uCAAP;AACA,SAAS,SAAT,QAA0B,oBAA1B;AACA,SAAS,UAAT,QAA2B,mBAA3B;AAEA;;;;AAGA,IAAA,4BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkD,EAAA,SAAA,CAAA,4BAAA,EAAA,MAAA,CAAA;;AAwB9C,WAAA,4BAAA,CAAY,IAAZ,EAA0B,OAA1B,EAAgE,MAAhE,EAA0F,YAA1F,EAAiH,MAAjH,EAAkI,QAAlI,EAAsJ,WAAtJ,EAA+K,gBAA/K,EAAuM;AAAjD,QAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,WAAA,GAAA,CAAA;AAAuB;;AAAE,QAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,gBAAA,GAAA,KAAA;AAAwB;;AAAvM,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,mBAAZ,EAAiC,CAAC,WAAD,EAAc,UAAd,CAAjC,EAA4D,IAA5D,EAAkE,OAAlE,EAA2E,MAA3E,EAAmF,YAAnF,EAAiG,MAAjG,EAAyG,QAAzG,EAAmH,IAAnH,EAAyH,WAAzH,EAAsI,SAAtI,EAAiJ,IAAjJ,EAAuJ,gBAAvJ,KAAwK,IAD5K;AAvBA;;;;;AAIO,IAAA,KAAA,CAAA,SAAA,GAAY,GAAZ;AAEP;;AACO,IAAA,KAAA,CAAA,SAAA,GAAY,CAAZ;AAEP;;;;;AAIO,IAAA,KAAA,CAAA,iBAAA,GAA2C,IAA3C;;AAYH,IAAA,KAAI,CAAC,iBAAL,CAAuB,GAAvB,CAA2B,UAAC,MAAD,EAAe;AACtC,UAAI,KAAI,CAAC,iBAAT,EAA4B;AACxB,QAAA,MAAM,CAAC,yBAAP,CAAiC,gBAAjC,EAAmD,KAAI,CAAC,iBAAxD;AACH;;AACD,MAAA,MAAM,CAAC,QAAP,CAAgB,WAAhB,EAA6B,IAAI,CAAC,GAAL,CAAS,KAAI,CAAC,SAAd,EAAyB,YAAzB,CAA7B;AACA,MAAA,MAAM,CAAC,QAAP,CAAgB,UAAhB,EAA4B,KAAI,CAAC,SAAjC;AACH,KAND;;;AAOH;AAjBD;;;;;;AAIO,EAAA,4BAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,8BAAP;AACH,GAFM;;AAfP,EAAA,UAAA,CAAA,CADC,SAAS,EACV,CAAA,E,sCAAA,E,WAAA,E,KAAuB,CAAvB,CAAA;;AA6BJ,SAAA,4BAAA;AAAC,CAlCD,CAAkD,WAAlD,CAAA;;SAAa,4B;AAoCb,UAAU,CAAC,eAAX,CAA2B,sCAA3B,IAAqE,4BAArE","sourcesContent":["import { Nullable } from \"../types\";\r\nimport { Camera } from \"../Cameras/camera\";\r\nimport { Effect } from \"../Materials/effect\";\r\nimport { PostProcess, PostProcessOptions } from \"./postProcess\";\r\nimport { Engine } from \"../Engines/engine\";\r\nimport { ToGammaSpace } from \"../Maths/math.constants\";\r\n\r\n\r\nimport \"../Shaders/extractHighlights.fragment\";\r\nimport { serialize } from '../Misc/decorators';\r\nimport { _TypeStore } from '../Misc/typeStore';\r\n\r\n/**\r\n * The extract highlights post process sets all pixels to black except pixels above the specified luminance threshold. Used as the first step for a bloom effect.\r\n */\r\nexport class ExtractHighlightsPostProcess extends PostProcess {\r\n    /**\r\n     * The luminance threshold, pixels below this value will be set to black.\r\n     */\r\n    @serialize()\r\n    public threshold = 0.9;\r\n\r\n    /** @hidden */\r\n    public _exposure = 1;\r\n\r\n    /**\r\n     * Post process which has the input texture to be used when performing highlight extraction\r\n     * @hidden\r\n     */\r\n    public _inputPostProcess: Nullable<PostProcess> = null;\r\n\r\n    /**\r\n     * Gets a string identifying the name of the class\r\n     * @returns \"ExtractHighlightsPostProcess\" string\r\n     */\r\n    public getClassName(): string {\r\n        return \"ExtractHighlightsPostProcess\";\r\n    }\r\n\r\n    constructor(name: string, options: number | PostProcessOptions, camera: Nullable<Camera>, samplingMode?: number, engine?: Engine, reusable?: boolean, textureType: number = 0, blockCompilation = false) {\r\n        super(name, \"extractHighlights\", [\"threshold\", \"exposure\"], null, options, camera, samplingMode, engine, reusable, null, textureType, undefined, null, blockCompilation);\r\n        this.onApplyObservable.add((effect: Effect) => {\r\n            if (this._inputPostProcess) {\r\n                effect.setTextureFromPostProcess(\"textureSampler\", this._inputPostProcess);\r\n            }\r\n            effect.setFloat('threshold', Math.pow(this.threshold, ToGammaSpace));\r\n            effect.setFloat('exposure', this._exposure);\r\n        });\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.ExtractHighlightsPostProcess\"] = ExtractHighlightsPostProcess;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}