{"ast":null,"code":"/**\r\n * Wrapper class for promise with external resolve and reject.\r\n */\nvar Deferred =\n/** @class */\nfunction () {\n  /**\r\n   * Constructor for this deferred object.\r\n   */\n  function Deferred() {\n    var _this = this;\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n    });\n  }\n\n  Object.defineProperty(Deferred.prototype, \"resolve\", {\n    /**\r\n     * The resolve method of the promise associated with this deferred object.\r\n     */\n    get: function () {\n      return this._resolve;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Deferred.prototype, \"reject\", {\n    /**\r\n     * The reject method of the promise associated with this deferred object.\r\n     */\n    get: function () {\n      return this._reject;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Deferred;\n}();\n\nexport { Deferred };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/deferred.ts"],"names":[],"mappings":"AAAA;;;AAGA,IAAA,QAAA;AAAA;AAAA,YAAA;AAuBI;;;AAGA,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,SAAK,OAAL,GAAe,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAgB;AACvC,MAAA,KAAI,CAAC,QAAL,GAAgB,OAAhB;AACA,MAAA,KAAI,CAAC,OAAL,GAAe,MAAf;AACH,KAHc,CAAf;AAIH;;AAnBD,EAAA,MAAA,CAAA,cAAA,CAAW,QAAA,CAAA,SAAX,EAAW,SAAX,EAAkB;AAHlB;;;SAGA,YAAA;AACI,aAAO,KAAK,QAAZ;AACH,KAFiB;qBAAA;;AAAA,GAAlB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,QAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA,YAAA;AACI,aAAO,KAAK,OAAZ;AACH,KAFgB;qBAAA;;AAAA,GAAjB;AAaJ,SAAA,QAAA;AAAC,CAhCD,EAAA","sourcesContent":["/**\r\n * Wrapper class for promise with external resolve and reject.\r\n */\r\nexport class Deferred<T> {\r\n    /**\r\n     * The promise associated with this deferred object.\r\n     */\r\n    public readonly promise: Promise<T>;\r\n\r\n    private _resolve: (value?: T | PromiseLike<T>) => void;\r\n    private _reject: (reason?: any) => void;\r\n\r\n    /**\r\n     * The resolve method of the promise associated with this deferred object.\r\n     */\r\n    public get resolve() {\r\n        return this._resolve;\r\n    }\r\n\r\n    /**\r\n     * The reject method of the promise associated with this deferred object.\r\n     */\r\n    public get reject() {\r\n        return this._reject;\r\n    }\r\n\r\n    /**\r\n     * Constructor for this deferred object.\r\n     */\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this._resolve = resolve;\r\n            this._reject = reject;\r\n        });\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}