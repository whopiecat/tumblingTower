{"ast":null,"code":"/**\r\n * Composed of a frame, and an action function\r\n */\nvar AnimationEvent =\n/** @class */\nfunction () {\n  /**\r\n   * Initializes the animation event\r\n   * @param frame The frame for which the event is triggered\r\n   * @param action The event to perform when triggered\r\n   * @param onlyOnce Specifies if the event should be triggered only once\r\n   */\n  function AnimationEvent(\n  /** The frame for which the event is triggered **/\n  frame,\n  /** The event to perform when triggered **/\n  action,\n  /** Specifies if the event should be triggered only once**/\n  onlyOnce) {\n    this.frame = frame;\n    this.action = action;\n    this.onlyOnce = onlyOnce;\n    /**\r\n     * Specifies if the animation event is done\r\n     */\n\n    this.isDone = false;\n  }\n  /** @hidden */\n\n\n  AnimationEvent.prototype._clone = function () {\n    return new AnimationEvent(this.frame, this.action, this.onlyOnce);\n  };\n\n  return AnimationEvent;\n}();\n\nexport { AnimationEvent };","map":{"version":3,"sources":["../../../sourceES6/core/Animations/animationEvent.ts"],"names":[],"mappings":"AAAA;;;AAGA,IAAA,cAAA;AAAA;AAAA,YAAA;AAMI;;;;;;AAMA,WAAA,cAAA;AACI;AACO,EAAA,KAFX;AAGI;AACO,EAAA,MAJX;AAKI;AACO,EAAA,QANX,EAM6B;AAJlB,SAAA,KAAA,GAAA,KAAA;AAEA,SAAA,MAAA,GAAA,MAAA;AAEA,SAAA,QAAA,GAAA,QAAA;AAjBX;;;;AAGO,SAAA,MAAA,GAAkB,KAAlB;AAeN;AAED;;;AACO,EAAA,cAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,WAAO,IAAI,cAAJ,CAAmB,KAAK,KAAxB,EAA+B,KAAK,MAApC,EAA4C,KAAK,QAAjD,CAAP;AACH,GAFM;;AAGX,SAAA,cAAA;AAAC,CAzBD,EAAA","sourcesContent":["/**\r\n * Composed of a frame, and an action function\r\n */\r\nexport class AnimationEvent {\r\n    /**\r\n     * Specifies if the animation event is done\r\n     */\r\n    public isDone: boolean = false;\r\n\r\n    /**\r\n     * Initializes the animation event\r\n     * @param frame The frame for which the event is triggered\r\n     * @param action The event to perform when triggered\r\n     * @param onlyOnce Specifies if the event should be triggered only once\r\n     */\r\n    constructor(\r\n        /** The frame for which the event is triggered **/\r\n        public frame: number,\r\n        /** The event to perform when triggered **/\r\n        public action: (currentFrame: number) => void,\r\n        /** Specifies if the event should be triggered only once**/\r\n        public onlyOnce?: boolean) {\r\n    }\r\n\r\n    /** @hidden */\r\n    public _clone(): AnimationEvent {\r\n        return new AnimationEvent(this.frame, this.action, this.onlyOnce);\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}