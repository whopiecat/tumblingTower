{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { FreeCamera } from \"./freeCamera\";\nimport { Vector3 } from \"../Maths/math.vector\";\nimport { Node } from \"../node\";\nNode.AddNodeConstructor(\"TouchCamera\", function (name, scene) {\n  return function () {\n    return new TouchCamera(name, Vector3.Zero(), scene);\n  };\n});\n/**\r\n * This represents a FPS type of camera controlled by touch.\r\n * This is like a universal camera minus the Gamepad controls.\r\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n */\n\nvar TouchCamera =\n/** @class */\nfunction (_super) {\n  __extends(TouchCamera, _super);\n  /**\r\n   * Instantiates a new touch camera.\r\n   * This represents a FPS type of camera controlled by touch.\r\n   * This is like a universal camera minus the Gamepad controls.\r\n   * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n   * @param name Define the name of the camera in the scene\r\n   * @param position Define the start position of the camera in the scene\r\n   * @param scene Define the scene the camera belongs to\r\n   */\n\n\n  function TouchCamera(name, position, scene) {\n    var _this = _super.call(this, name, position, scene) || this;\n\n    _this.inputs.addTouch();\n\n    _this._setupInputs();\n\n    return _this;\n  }\n\n  Object.defineProperty(TouchCamera.prototype, \"touchAngularSensibility\", {\n    /**\r\n     * Defines the touch sensibility for rotation.\r\n     * The higher the faster.\r\n     */\n    get: function () {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        return touch.touchAngularSensibility;\n      }\n\n      return 0;\n    },\n    set: function (value) {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        touch.touchAngularSensibility = value;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TouchCamera.prototype, \"touchMoveSensibility\", {\n    /**\r\n     * Defines the touch sensibility for move.\r\n     * The higher the faster.\r\n     */\n    get: function () {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        return touch.touchMoveSensibility;\n      }\n\n      return 0;\n    },\n    set: function (value) {\n      var touch = this.inputs.attached[\"touch\"];\n\n      if (touch) {\n        touch.touchMoveSensibility = value;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Gets the current object class name.\r\n   * @return the class name\r\n   */\n\n  TouchCamera.prototype.getClassName = function () {\n    return \"TouchCamera\";\n  };\n  /** @hidden */\n\n\n  TouchCamera.prototype._setupInputs = function () {\n    var touch = this.inputs.attached[\"touch\"];\n    var mouse = this.inputs.attached[\"mouse\"];\n\n    if (mouse) {\n      mouse.touchEnabled = false;\n    } else {\n      touch.allowMouse = true;\n    }\n  };\n\n  return TouchCamera;\n}(FreeCamera);\n\nexport { TouchCamera };","map":{"version":3,"sources":["../../../sourceES6/core/Cameras/touchCamera.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAA2B,cAA3B;AAIA,SAAS,OAAT,QAAwB,sBAAxB;AACA,SAAS,IAAT,QAAqB,SAArB;AAEA,IAAI,CAAC,kBAAL,CAAwB,aAAxB,EAAuC,UAAC,IAAD,EAAO,KAAP,EAAY;AAC/C,SAAO,YAAA;AAAM,WAAA,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,OAAO,CAAC,IAAR,EAAtB,EAAA,KAAA,CAAA;AAA4C,GAAzD;AACH,CAFD;AAIA;;;;;;AAKA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;AAyC7B;;;;;;;;;;;AASA,WAAA,WAAA,CAAY,IAAZ,EAA0B,QAA1B,EAA6C,KAA7C,EAAyD;AAAzD,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,QAAZ,EAAsB,KAAtB,KAA4B,IADhC;;AAEI,IAAA,KAAI,CAAC,MAAL,CAAY,QAAZ;;AAEA,IAAA,KAAI,CAAC,YAAL;;;AACH;;AAlDD,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,yBAAX,EAAkC;AAJlC;;;;SAIA,YAAA;AACI,UAAI,KAAK,GAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAAlC;;AACA,UAAI,KAAJ,EAAW;AACP,eAAO,KAAK,CAAC,uBAAb;AACH;;AAED,aAAO,CAAP;AACH,KAPiC;SASlC,UAAmC,KAAnC,EAAgD;AAC5C,UAAI,KAAK,GAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAAlC;;AACA,UAAI,KAAJ,EAAW;AACP,QAAA,KAAK,CAAC,uBAAN,GAAgC,KAAhC;AACH;AACJ,KAdiC;qBAAA;;AAAA,GAAlC;AAoBA,EAAA,MAAA,CAAA,cAAA,CAAW,WAAA,CAAA,SAAX,EAAW,sBAAX,EAA+B;AAJ/B;;;;SAIA,YAAA;AACI,UAAI,KAAK,GAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAAlC;;AACA,UAAI,KAAJ,EAAW;AACP,eAAO,KAAK,CAAC,oBAAb;AACH;;AAED,aAAO,CAAP;AACH,KAP8B;SAS/B,UAAgC,KAAhC,EAA6C;AACzC,UAAI,KAAK,GAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAAlC;;AACA,UAAI,KAAJ,EAAW;AACP,QAAA,KAAK,CAAC,oBAAN,GAA6B,KAA7B;AACH;AACJ,KAd8B;qBAAA;;AAAA,GAA/B;AAgCA;;;;;AAIO,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,aAAP;AACH,GAFM;AAIP;;;AACO,EAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,QAAI,KAAK,GAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAAlC;AACA,QAAI,KAAK,GAAyB,KAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,CAAlC;;AACA,QAAI,KAAJ,EAAW;AACP,MAAA,KAAK,CAAC,YAAN,GAAqB,KAArB;AACH,KAFD,MAEO;AACH,MAAA,KAAK,CAAC,UAAN,GAAmB,IAAnB;AACH;AACJ,GARM;;AASX,SAAA,WAAA;AAAC,CA3ED,CAAiC,UAAjC,CAAA","sourcesContent":["import { FreeCamera } from \"./freeCamera\";\r\nimport { FreeCameraTouchInput } from \"../Cameras/Inputs/freeCameraTouchInput\";\r\nimport { FreeCameraMouseInput } from \"../Cameras/Inputs/freeCameraMouseInput\";\r\nimport { Scene } from \"../scene\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport { Node } from \"../node\";\r\n\r\nNode.AddNodeConstructor(\"TouchCamera\", (name, scene) => {\r\n    return () => new TouchCamera(name, Vector3.Zero(), scene);\r\n});\r\n\r\n/**\r\n * This represents a FPS type of camera controlled by touch.\r\n * This is like a universal camera minus the Gamepad controls.\r\n * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n */\r\nexport class TouchCamera extends FreeCamera {\r\n    /**\r\n     * Defines the touch sensibility for rotation.\r\n     * The higher the faster.\r\n     */\r\n    public get touchAngularSensibility(): number {\r\n        var touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            return touch.touchAngularSensibility;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    public set touchAngularSensibility(value: number) {\r\n        var touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            touch.touchAngularSensibility = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Defines the touch sensibility for move.\r\n     * The higher the faster.\r\n     */\r\n    public get touchMoveSensibility(): number {\r\n        var touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            return touch.touchMoveSensibility;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    public set touchMoveSensibility(value: number) {\r\n        var touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        if (touch) {\r\n            touch.touchMoveSensibility = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Instantiates a new touch camera.\r\n     * This represents a FPS type of camera controlled by touch.\r\n     * This is like a universal camera minus the Gamepad controls.\r\n     * @see https://doc.babylonjs.com/features/cameras#universal-camera\r\n     * @param name Define the name of the camera in the scene\r\n     * @param position Define the start position of the camera in the scene\r\n     * @param scene Define the scene the camera belongs to\r\n     */\r\n    constructor(name: string, position: Vector3, scene: Scene) {\r\n        super(name, position, scene);\r\n        this.inputs.addTouch();\r\n\r\n        this._setupInputs();\r\n    }\r\n\r\n    /**\r\n     * Gets the current object class name.\r\n     * @return the class name\r\n     */\r\n    public getClassName(): string {\r\n        return \"TouchCamera\";\r\n    }\r\n\r\n    /** @hidden */\r\n    public _setupInputs() {\r\n        var touch = <FreeCameraTouchInput>this.inputs.attached[\"touch\"];\r\n        var mouse = <FreeCameraMouseInput>this.inputs.attached[\"mouse\"];\r\n        if (mouse) {\r\n            mouse.touchEnabled = false;\r\n        } else {\r\n            touch.allowMouse = true;\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}