{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../../Misc/typeStore';\n/**\r\n * Block used to discard a pixel if a value is smaller than a cutoff\r\n */\n\nvar DiscardBlock =\n/** @class */\nfunction (_super) {\n  __extends(DiscardBlock, _super);\n  /**\r\n   * Create a new DiscardBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function DiscardBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment, true) || this;\n\n    _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    _this.registerInput(\"cutoff\", NodeMaterialBlockConnectionPointTypes.Float, true);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  DiscardBlock.prototype.getClassName = function () {\n    return \"DiscardBlock\";\n  };\n\n  Object.defineProperty(DiscardBlock.prototype, \"value\", {\n    /**\r\n     * Gets the color input component\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DiscardBlock.prototype, \"cutoff\", {\n    /**\r\n     * Gets the cutoff input component\r\n     */\n    get: function () {\n      return this._inputs[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DiscardBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    state.sharedData.hints.needAlphaTesting = true;\n\n    if (!this.cutoff.isConnected || !this.value.isConnected) {\n      return;\n    }\n\n    state.compilationString += \"if (\" + this.value.associatedVariableName + \" < \" + this.cutoff.associatedVariableName + \") discard;\\r\\n\";\n    return this;\n  };\n\n  return DiscardBlock;\n}(NodeMaterialBlock);\n\nexport { DiscardBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.DiscardBlock\"] = DiscardBlock;","map":{"version":3,"sources":["../../../../../../sourceES6/core/Materials/Node/Blocks/Fragment/discardBlock.ts"],"names":[],"mappings":";AAAA,SAAS,iBAAT,QAAkC,yBAAlC;AACA,SAAS,qCAAT,QAAsD,mDAAtD;AAEA,SAAS,wBAAT,QAAyC,sCAAzC;AAEA,SAAS,UAAT,QAA2B,4BAA3B;AACA;;;;AAGA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;AAC9B;;;;;;AAIA,WAAA,YAAA,CAAmB,IAAnB,EAA+B;AAA/B,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,IAAN,EAAY,wBAAwB,CAAC,QAArC,EAA+C,IAA/C,KAAoD,IADxD;;AAGI,IAAA,KAAI,CAAC,aAAL,CAAmB,OAAnB,EAA4B,qCAAqC,CAAC,KAAlE,EAAyE,IAAzE;;AACA,IAAA,KAAI,CAAC,aAAL,CAAmB,QAAnB,EAA6B,qCAAqC,CAAC,KAAnE,EAA0E,IAA1E;;;AACH;AAED;;;;;;AAIO,EAAA,YAAA,CAAA,SAAA,CAAA,YAAA,GAAP,YAAA;AACI,WAAO,cAAP;AACH,GAFM;;AAOP,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;AAHhB;;;SAGA,YAAA;AACI,aAAO,KAAK,OAAL,CAAa,CAAb,CAAP;AACH,KAFe;qBAAA;;AAAA,GAAhB;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,YAAA,CAAA,SAAX,EAAW,QAAX,EAAiB;AAHjB;;;SAGA,YAAA;AACI,aAAO,KAAK,OAAL,CAAa,CAAb,CAAP;AACH,KAFgB;qBAAA;;AAAA,GAAjB;;AAIU,EAAA,YAAA,CAAA,SAAA,CAAA,WAAA,GAAV,UAAsB,KAAtB,EAAmD;AAC/C,IAAA,MAAA,CAAA,SAAA,CAAM,WAAN,CAAiB,IAAjB,CAAiB,IAAjB,EAAkB,KAAlB;;AAEA,IAAA,KAAK,CAAC,UAAN,CAAiB,KAAjB,CAAuB,gBAAvB,GAA0C,IAA1C;;AAEA,QAAI,CAAC,KAAK,MAAL,CAAY,WAAb,IAA4B,CAAC,KAAK,KAAL,CAAW,WAA5C,EAAyD;AACrD;AACH;;AAED,IAAA,KAAK,CAAC,iBAAN,IAA2B,SAAO,KAAK,KAAL,CAAW,sBAAlB,GAAwC,KAAxC,GAA8C,KAAK,MAAL,CAAY,sBAA1D,GAAgF,gBAA3G;AAEA,WAAO,IAAP;AACH,GAZS;;AAad,SAAA,YAAA;AAAC,CA/CD,CAAkC,iBAAlC,CAAA;;;AAiDA,UAAU,CAAC,eAAX,CAA2B,sBAA3B,IAAqD,YAArD","sourcesContent":["import { NodeMaterialBlock } from '../../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../../nodeMaterialBuildState';\r\nimport { NodeMaterialBlockTargets } from '../../Enums/nodeMaterialBlockTargets';\r\nimport { NodeMaterialConnectionPoint } from '../../nodeMaterialBlockConnectionPoint';\r\nimport { _TypeStore } from '../../../../Misc/typeStore';\r\n/**\r\n * Block used to discard a pixel if a value is smaller than a cutoff\r\n */\r\nexport class DiscardBlock extends NodeMaterialBlock {\r\n    /**\r\n     * Create a new DiscardBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Fragment, true);\r\n\r\n        this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n        this.registerInput(\"cutoff\", NodeMaterialBlockConnectionPointTypes.Float, true);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"DiscardBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the color input component\r\n     */\r\n    public get value(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the cutoff input component\r\n     */\r\n    public get cutoff(): NodeMaterialConnectionPoint {\r\n        return this._inputs[1];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        state.sharedData.hints.needAlphaTesting = true;\r\n\r\n        if (!this.cutoff.isConnected || !this.value.isConnected) {\r\n            return;\r\n        }\r\n\r\n        state.compilationString += `if (${this.value.associatedVariableName} < ${this.cutoff.associatedVariableName}) discard;\\r\\n`;\r\n\r\n        return this;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.DiscardBlock\"] = DiscardBlock;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}