{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\nimport { Mesh } from \"../../Meshes/mesh\";\nimport { Quaternion } from \"../../Maths/math.vector\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\n/**\r\n * The motion controller class for the standard HTC-Vive controllers\r\n */\n\nvar WebXRHTCViveMotionController =\n/** @class */\nfunction (_super) {\n  __extends(WebXRHTCViveMotionController, _super);\n  /**\r\n   * Create a new Vive motion controller object\r\n   * @param scene the scene to use to create this controller\r\n   * @param gamepadObject the corresponding gamepad object\r\n   * @param handedness the handedness of the controller\r\n   */\n\n\n  function WebXRHTCViveMotionController(scene, gamepadObject, handedness) {\n    var _this = _super.call(this, scene, HTCViveLayout[handedness], gamepadObject, handedness) || this;\n\n    _this.profileId = \"htc-vive\";\n    return _this;\n  }\n\n  WebXRHTCViveMotionController.prototype._getFilenameAndPath = function () {\n    var filename = WebXRHTCViveMotionController.MODEL_FILENAME;\n    var path = WebXRHTCViveMotionController.MODEL_BASE_URL;\n    return {\n      filename: filename,\n      path: path\n    };\n  };\n\n  WebXRHTCViveMotionController.prototype._getModelLoadingConstraints = function () {\n    return true;\n  };\n\n  WebXRHTCViveMotionController.prototype._processLoadedModel = function (_meshes) {\n    var _this = this;\n\n    this.getComponentIds().forEach(function (id) {\n      var comp = id && _this.getComponent(id);\n\n      if (comp) {\n        comp.onButtonStateChangedObservable.add(function (component) {\n          if (!_this.rootMesh || _this.disableAnimation) {\n            return;\n          }\n\n          switch (id) {\n            case \"xr-standard-trigger\":\n              _this._modelRootNode.getChildren()[6].rotation.x = -component.value * 0.15;\n              return;\n\n            case \"xr-standard-touchpad\":\n              return;\n\n            case \"xr-standard-squeeze\":\n              return;\n          }\n        }, undefined, true);\n      }\n    });\n  };\n\n  WebXRHTCViveMotionController.prototype._setRootMesh = function (meshes) {\n    this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n    meshes.forEach(function (mesh) {\n      mesh.isPickable = false;\n    });\n    this._modelRootNode = meshes[1];\n    this._modelRootNode.parent = this.rootMesh;\n\n    if (!this.scene.useRightHandedSystem) {\n      this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n    }\n  };\n\n  WebXRHTCViveMotionController.prototype._updateModel = function () {// no-op. model is updated using observables.\n  };\n  /**\r\n   * The base url used to load the left and right controller models\r\n   */\n\n\n  WebXRHTCViveMotionController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/vive/\";\n  /**\r\n   * File name for the controller model.\r\n   */\n\n  WebXRHTCViveMotionController.MODEL_FILENAME = \"wand.babylon\";\n  return WebXRHTCViveMotionController;\n}(WebXRAbstractMotionController);\n\nexport { WebXRHTCViveMotionController }; // register the profile\n\nWebXRMotionControllerManager.RegisterController(\"htc-vive\", function (xrInput, scene) {\n  return new WebXRHTCViveMotionController(scene, xrInput.gamepad, xrInput.handedness);\n}); // WebXRMotionControllerManager.RegisterController(\"htc-vive-legacy\", (xrInput: XRInputSource, scene: Scene) => {\n//     return new WebXRHTCViveMotionController(scene, <any>(xrInput.gamepad), xrInput.handedness, true);\n// });\n\nvar HTCViveLayout = {\n  left: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc_vive_none\",\n    assetPath: \"none.glb\"\n  },\n  right: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc_vive_none\",\n    assetPath: \"none.glb\"\n  },\n  none: {\n    selectComponentId: \"xr-standard-trigger\",\n    components: {\n      \"xr-standard-trigger\": {\n        type: \"trigger\",\n        gamepadIndices: {\n          button: 0\n        },\n        rootNodeName: \"xr_standard_trigger\",\n        visualResponses: {}\n      },\n      \"xr-standard-squeeze\": {\n        type: \"squeeze\",\n        gamepadIndices: {\n          button: 1\n        },\n        rootNodeName: \"xr_standard_squeeze\",\n        visualResponses: {}\n      },\n      \"xr-standard-touchpad\": {\n        type: \"touchpad\",\n        gamepadIndices: {\n          button: 2,\n          xAxis: 0,\n          yAxis: 1\n        },\n        rootNodeName: \"xr_standard_touchpad\",\n        visualResponses: {}\n      },\n      menu: {\n        type: \"button\",\n        gamepadIndices: {\n          button: 4\n        },\n        rootNodeName: \"menu\",\n        visualResponses: {}\n      }\n    },\n    gamepadMapping: \"xr-standard\",\n    rootNodeName: \"htc-vive-none\",\n    assetPath: \"none.glb\"\n  }\n};","map":{"version":3,"sources":["../../../../sourceES6/core/XR/motionController/webXRHTCViveMotionController.ts"],"names":[],"mappings":"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","sourcesContent":["import { IMotionControllerLayoutMap, IMinimalMotionControllerObject, MotionControllerHandedness, WebXRAbstractMotionController } from \"./webXRAbstractMotionController\";\r\nimport { Scene } from \"../../scene\";\r\nimport { AbstractMesh } from \"../../Meshes/abstractMesh\";\r\nimport { Mesh } from \"../../Meshes/mesh\";\r\nimport { Quaternion } from \"../../Maths/math.vector\";\r\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager\";\r\n\r\n/**\r\n * The motion controller class for the standard HTC-Vive controllers\r\n */\r\nexport class WebXRHTCViveMotionController extends WebXRAbstractMotionController {\r\n    private _modelRootNode: AbstractMesh;\r\n\r\n    /**\r\n     * The base url used to load the left and right controller models\r\n     */\r\n    public static MODEL_BASE_URL: string = \"https://controllers.babylonjs.com/vive/\";\r\n    /**\r\n     * File name for the controller model.\r\n     */\r\n    public static MODEL_FILENAME: string = \"wand.babylon\";\r\n\r\n    public profileId = \"htc-vive\";\r\n\r\n    /**\r\n     * Create a new Vive motion controller object\r\n     * @param scene the scene to use to create this controller\r\n     * @param gamepadObject the corresponding gamepad object\r\n     * @param handedness the handedness of the controller\r\n     */\r\n    constructor(scene: Scene, gamepadObject: IMinimalMotionControllerObject, handedness: MotionControllerHandedness) {\r\n        super(scene, HTCViveLayout[handedness], gamepadObject, handedness);\r\n    }\r\n\r\n    protected _getFilenameAndPath(): { filename: string; path: string } {\r\n        let filename = WebXRHTCViveMotionController.MODEL_FILENAME;\r\n        let path = WebXRHTCViveMotionController.MODEL_BASE_URL;\r\n\r\n        return {\r\n            filename,\r\n            path,\r\n        };\r\n    }\r\n\r\n    protected _getModelLoadingConstraints(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected _processLoadedModel(_meshes: AbstractMesh[]): void {\r\n        this.getComponentIds().forEach((id) => {\r\n            const comp = id && this.getComponent(id);\r\n            if (comp) {\r\n                comp.onButtonStateChangedObservable.add(\r\n                    (component) => {\r\n                        if (!this.rootMesh || this.disableAnimation) {\r\n                            return;\r\n                        }\r\n\r\n                        switch (id) {\r\n                            case \"xr-standard-trigger\":\r\n                                (<AbstractMesh>this._modelRootNode.getChildren()[6]).rotation.x = -component.value * 0.15;\r\n                                return;\r\n                            case \"xr-standard-touchpad\":\r\n                                return;\r\n                            case \"xr-standard-squeeze\":\r\n                                return;\r\n                        }\r\n                    },\r\n                    undefined,\r\n                    true\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    protected _setRootMesh(meshes: AbstractMesh[]): void {\r\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\r\n\r\n        meshes.forEach((mesh) => {\r\n            mesh.isPickable = false;\r\n        });\r\n        this._modelRootNode = meshes[1];\r\n        this._modelRootNode.parent = this.rootMesh;\r\n        if (!this.scene.useRightHandedSystem) {\r\n            this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\r\n        }\r\n    }\r\n\r\n    protected _updateModel(): void {\r\n        // no-op. model is updated using observables.\r\n    }\r\n}\r\n\r\n// register the profile\r\nWebXRMotionControllerManager.RegisterController(\"htc-vive\", (xrInput: XRInputSource, scene: Scene) => {\r\n    return new WebXRHTCViveMotionController(scene, <any>xrInput.gamepad, xrInput.handedness);\r\n});\r\n\r\n// WebXRMotionControllerManager.RegisterController(\"htc-vive-legacy\", (xrInput: XRInputSource, scene: Scene) => {\r\n//     return new WebXRHTCViveMotionController(scene, <any>(xrInput.gamepad), xrInput.handedness, true);\r\n// });\r\n\r\nconst HTCViveLayout: IMotionControllerLayoutMap = {\r\n    left: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {},\r\n            },\r\n            menu: {\r\n                type: \"button\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"menu\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"htc_vive_none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n    right: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {},\r\n            },\r\n            menu: {\r\n                type: \"button\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"menu\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"htc_vive_none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n    none: {\r\n        selectComponentId: \"xr-standard-trigger\",\r\n        components: {\r\n            \"xr-standard-trigger\": {\r\n                type: \"trigger\",\r\n                gamepadIndices: {\r\n                    button: 0,\r\n                },\r\n                rootNodeName: \"xr_standard_trigger\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-squeeze\": {\r\n                type: \"squeeze\",\r\n                gamepadIndices: {\r\n                    button: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_squeeze\",\r\n                visualResponses: {},\r\n            },\r\n            \"xr-standard-touchpad\": {\r\n                type: \"touchpad\",\r\n                gamepadIndices: {\r\n                    button: 2,\r\n                    xAxis: 0,\r\n                    yAxis: 1,\r\n                },\r\n                rootNodeName: \"xr_standard_touchpad\",\r\n                visualResponses: {},\r\n            },\r\n            menu: {\r\n                type: \"button\",\r\n                gamepadIndices: {\r\n                    button: 4,\r\n                },\r\n                rootNodeName: \"menu\",\r\n                visualResponses: {},\r\n            },\r\n        },\r\n        gamepadMapping: \"xr-standard\",\r\n        rootNodeName: \"htc-vive-none\",\r\n        assetPath: \"none.glb\",\r\n    },\r\n};\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}