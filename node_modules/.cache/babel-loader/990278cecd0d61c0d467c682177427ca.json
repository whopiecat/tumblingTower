{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { CameraInputsManager } from \"./cameraInputsManager\";\nimport { FollowCameraKeyboardMoveInput } from './Inputs/followCameraKeyboardMoveInput';\nimport { FollowCameraMouseWheelInput } from './Inputs/followCameraMouseWheelInput';\nimport { FollowCameraPointersInput } from './Inputs/followCameraPointersInput';\n/**\r\n * Default Inputs manager for the FollowCamera.\r\n * It groups all the default supported inputs for ease of use.\r\n * @see https://doc.babylonjs.com/how_to/customizing_camera_inputs\r\n */\n\nvar FollowCameraInputsManager =\n/** @class */\nfunction (_super) {\n  __extends(FollowCameraInputsManager, _super);\n  /**\r\n   * Instantiates a new FollowCameraInputsManager.\r\n   * @param camera Defines the camera the inputs belong to\r\n   */\n\n\n  function FollowCameraInputsManager(camera) {\n    return _super.call(this, camera) || this;\n  }\n  /**\r\n   * Add keyboard input support to the input manager.\r\n   * @returns the current input manager\r\n   */\n\n\n  FollowCameraInputsManager.prototype.addKeyboard = function () {\n    this.add(new FollowCameraKeyboardMoveInput());\n    return this;\n  };\n  /**\r\n   * Add mouse wheel input support to the input manager.\r\n   * @returns the current input manager\r\n   */\n\n\n  FollowCameraInputsManager.prototype.addMouseWheel = function () {\n    this.add(new FollowCameraMouseWheelInput());\n    return this;\n  };\n  /**\r\n   * Add pointers input support to the input manager.\r\n   * @returns the current input manager\r\n   */\n\n\n  FollowCameraInputsManager.prototype.addPointers = function () {\n    this.add(new FollowCameraPointersInput());\n    return this;\n  };\n  /**\r\n   * Add orientation input support to the input manager.\r\n   * @returns the current input manager\r\n   */\n\n\n  FollowCameraInputsManager.prototype.addVRDeviceOrientation = function () {\n    console.warn(\"DeviceOrientation support not yet implemented for FollowCamera.\");\n    return this;\n  };\n\n  return FollowCameraInputsManager;\n}(CameraInputsManager);\n\nexport { FollowCameraInputsManager };","map":{"version":3,"sources":["../../../sourceES6/core/Cameras/followCameraInputsManager.ts"],"names":[],"mappings":";AAAA,SAAS,mBAAT,QAAoC,uBAApC;AAEA,SAAS,6BAAT,QAA8C,wCAA9C;AACA,SAAS,2BAAT,QAA4C,sCAA5C;AACA,SAAS,yBAAT,QAA0C,oCAA1C;AAEA;;;;;;AAKA,IAAA,yBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+C,EAAA,SAAA,CAAA,yBAAA,EAAA,MAAA,CAAA;AAC3C;;;;;;AAIA,WAAA,yBAAA,CAAY,MAAZ,EAAgC;WAC5B,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,MAAN,KAAa,I;AAChB;AAED;;;;;;AAIO,EAAA,yBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,SAAK,GAAL,CAAS,IAAI,6BAAJ,EAAT;AACA,WAAO,IAAP;AACH,GAHM;AAKP;;;;;;AAIO,EAAA,yBAAA,CAAA,SAAA,CAAA,aAAA,GAAP,YAAA;AACI,SAAK,GAAL,CAAS,IAAI,2BAAJ,EAAT;AACA,WAAO,IAAP;AACH,GAHM;AAKP;;;;;;AAIO,EAAA,yBAAA,CAAA,SAAA,CAAA,WAAA,GAAP,YAAA;AACI,SAAK,GAAL,CAAS,IAAI,yBAAJ,EAAT;AACA,WAAO,IAAP;AACH,GAHM;AAKP;;;;;;AAIO,EAAA,yBAAA,CAAA,SAAA,CAAA,sBAAA,GAAP,YAAA;AACI,IAAA,OAAO,CAAC,IAAR,CAAa,iEAAb;AACA,WAAO,IAAP;AACH,GAHM;;AAIX,SAAA,yBAAA;AAAC,CA5CD,CAA+C,mBAA/C,CAAA","sourcesContent":["import { CameraInputsManager } from \"./cameraInputsManager\";\nimport { FollowCamera } from \"./followCamera\";\nimport { FollowCameraKeyboardMoveInput } from './Inputs/followCameraKeyboardMoveInput';\nimport { FollowCameraMouseWheelInput } from './Inputs/followCameraMouseWheelInput';\nimport { FollowCameraPointersInput } from './Inputs/followCameraPointersInput';\n\n/**\n * Default Inputs manager for the FollowCamera.\n * It groups all the default supported inputs for ease of use.\n * @see https://doc.babylonjs.com/how_to/customizing_camera_inputs\n */\nexport class FollowCameraInputsManager extends CameraInputsManager<FollowCamera> {\n    /**\n     * Instantiates a new FollowCameraInputsManager.\n     * @param camera Defines the camera the inputs belong to\n     */\n    constructor(camera: FollowCamera) {\n        super(camera);\n    }\n\n    /**\n     * Add keyboard input support to the input manager.\n     * @returns the current input manager\n     */\n    public addKeyboard(): FollowCameraInputsManager {\n        this.add(new FollowCameraKeyboardMoveInput());\n        return this;\n    }\n\n    /**\n     * Add mouse wheel input support to the input manager.\n     * @returns the current input manager\n     */\n    public addMouseWheel(): FollowCameraInputsManager {\n        this.add(new FollowCameraMouseWheelInput());\n        return this;\n    }\n\n    /**\n     * Add pointers input support to the input manager.\n     * @returns the current input manager\n     */\n    public addPointers(): FollowCameraInputsManager {\n        this.add(new FollowCameraPointersInput());\n        return this;\n    }\n\n    /**\n     * Add orientation input support to the input manager.\n     * @returns the current input manager\n     */\n    public addVRDeviceOrientation(): FollowCameraInputsManager {\n        console.warn(\"DeviceOrientation support not yet implemented for FollowCamera.\");\n        return this;\n    }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}