{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from '../nodeMaterialBlock';\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\nimport { _TypeStore } from '../../../Misc/typeStore';\n/**\r\n * Operations supported by the Wave block\r\n */\n\nexport var WaveBlockKind;\n\n(function (WaveBlockKind) {\n  /** SawTooth */\n  WaveBlockKind[WaveBlockKind[\"SawTooth\"] = 0] = \"SawTooth\";\n  /** Square */\n\n  WaveBlockKind[WaveBlockKind[\"Square\"] = 1] = \"Square\";\n  /** Triangle */\n\n  WaveBlockKind[WaveBlockKind[\"Triangle\"] = 2] = \"Triangle\";\n})(WaveBlockKind || (WaveBlockKind = {}));\n/**\r\n * Block used to apply wave operation to floats\r\n */\n\n\nvar WaveBlock =\n/** @class */\nfunction (_super) {\n  __extends(WaveBlock, _super);\n  /**\r\n   * Creates a new WaveBlock\r\n   * @param name defines the block name\r\n   */\n\n\n  function WaveBlock(name) {\n    var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n    /**\r\n     * Gets or sets the kibnd of wave to be applied by the block\r\n     */\n\n\n    _this.kind = WaveBlockKind.SawTooth;\n\n    _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n\n    _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n\n    _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n\n    _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n\n    return _this;\n  }\n  /**\r\n   * Gets the current class name\r\n   * @returns the class name\r\n   */\n\n\n  WaveBlock.prototype.getClassName = function () {\n    return \"WaveBlock\";\n  };\n\n  Object.defineProperty(WaveBlock.prototype, \"input\", {\n    /**\r\n     * Gets the input component\r\n     */\n    get: function () {\n      return this._inputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(WaveBlock.prototype, \"output\", {\n    /**\r\n     * Gets the output component\r\n     */\n    get: function () {\n      return this._outputs[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  WaveBlock.prototype._buildBlock = function (state) {\n    _super.prototype._buildBlock.call(this, state);\n\n    var output = this._outputs[0];\n\n    switch (this.kind) {\n      case WaveBlockKind.SawTooth:\n        {\n          state.compilationString += this._declareOutput(output, state) + (\" = \" + this.input.associatedVariableName + \" - floor(0.5 + \" + this.input.associatedVariableName + \");\\r\\n\");\n          break;\n        }\n\n      case WaveBlockKind.Square:\n        {\n          state.compilationString += this._declareOutput(output, state) + (\" = 1.0 - 2.0 * round(fract(\" + this.input.associatedVariableName + \"));\\r\\n\");\n          break;\n        }\n\n      case WaveBlockKind.Triangle:\n        {\n          state.compilationString += this._declareOutput(output, state) + (\" = 2.0 * abs(2.0 * (\" + this.input.associatedVariableName + \" - floor(0.5 + \" + this.input.associatedVariableName + \"))) - 1.0;\\r\\n\");\n          break;\n        }\n    }\n\n    return this;\n  };\n\n  WaveBlock.prototype.serialize = function () {\n    var serializationObject = _super.prototype.serialize.call(this);\n\n    serializationObject.kind = this.kind;\n    return serializationObject;\n  };\n\n  WaveBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n    _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n\n    this.kind = serializationObject.kind;\n  };\n\n  return WaveBlock;\n}(NodeMaterialBlock);\n\nexport { WaveBlock };\n_TypeStore.RegisteredTypes[\"BABYLON.WaveBlock\"] = WaveBlock;","map":{"version":3,"sources":["../../../../../sourceES6/core/Materials/Node/Blocks/waveBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeMaterialBlock } from '../nodeMaterialBlock';\r\nimport { NodeMaterialBlockConnectionPointTypes } from '../Enums/nodeMaterialBlockConnectionPointTypes';\r\nimport { NodeMaterialBuildState } from '../nodeMaterialBuildState';\r\nimport { NodeMaterialConnectionPoint } from '../nodeMaterialBlockConnectionPoint';\r\nimport { NodeMaterialBlockTargets } from '../Enums/nodeMaterialBlockTargets';\r\nimport { _TypeStore } from '../../../Misc/typeStore';\r\nimport { Scene } from '../../../scene';\r\n\r\n/**\r\n * Operations supported by the Wave block\r\n */\r\nexport enum WaveBlockKind {\r\n    /** SawTooth */\r\n    SawTooth,\r\n    /** Square */\r\n    Square,\r\n    /** Triangle */\r\n    Triangle\r\n}\r\n\r\n/**\r\n * Block used to apply wave operation to floats\r\n */\r\nexport class WaveBlock extends NodeMaterialBlock {\r\n\r\n    /**\r\n     * Gets or sets the kibnd of wave to be applied by the block\r\n     */\r\n    public kind = WaveBlockKind.SawTooth;\r\n\r\n    /**\r\n     * Creates a new WaveBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name, NodeMaterialBlockTargets.Neutral);\r\n\r\n        this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public getClassName() {\r\n        return \"WaveBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeMaterialConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeMaterialConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected _buildBlock(state: NodeMaterialBuildState) {\r\n        super._buildBlock(state);\r\n\r\n        let output = this._outputs[0];\r\n\r\n        switch (this.kind) {\r\n            case WaveBlockKind.SawTooth: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = ${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName});\\r\\n`;\r\n                break;\r\n            }\r\n            case WaveBlockKind.Square: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = 1.0 - 2.0 * round(fract(${this.input.associatedVariableName}));\\r\\n`;\r\n                break;\r\n            }\r\n            case WaveBlockKind.Triangle: {\r\n                state.compilationString += this._declareOutput(output, state) + ` = 2.0 * abs(2.0 * (${this.input.associatedVariableName} - floor(0.5 + ${this.input.associatedVariableName}))) - 1.0;\\r\\n`;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public serialize(): any {\r\n        let serializationObject = super.serialize();\r\n\r\n        serializationObject.kind = this.kind;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public _deserialize(serializationObject: any, scene: Scene, rootUrl: string) {\r\n        super._deserialize(serializationObject, scene, rootUrl);\r\n\r\n        this.kind = serializationObject.kind;\r\n    }\r\n}\r\n\r\n_TypeStore.RegisteredTypes[\"BABYLON.WaveBlock\"] = WaveBlock;"],"sourceRoot":""},"metadata":{},"sourceType":"module"}