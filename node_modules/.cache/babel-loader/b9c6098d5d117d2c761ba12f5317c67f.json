{"ast":null,"code":"import { Effect } from \"../../Materials/effect\";\nvar name = 'pbrBlockNormalGeometric';\nvar shader = \"vec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=normalize(cross(dFdx(vPositionW),dFdy(vPositionW)))*vEyePosition.w;\\n#endif\\nvec3 geometricNormalW=normalW;\\n#if defined(TWOSIDEDLIGHTING) && defined(NORMAL)\\ngeometricNormalW=gl_FrontFacing ? geometricNormalW : -geometricNormalW;\\n#endif\\n\";\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\n\nexport var pbrBlockNormalGeometric = {\n  name: name,\n  shader: shader\n};","map":{"version":3,"sources":["../../../../sourceES6/core/Shaders/ShadersInclude/pbrBlockNormalGeometric.ts"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,wBAAvB;AAEA,IAAI,IAAI,GAAG,yBAAX;AACA,IAAI,MAAM,GAAG,qXAAb;AAYA,MAAM,CAAC,oBAAP,CAA4B,IAA5B,IAAoC,MAApC;AACA;;AACA,OAAO,IAAI,uBAAuB,GAAG;AAAE,EAAA,IAAI,EAAA,IAAN;AAAQ,EAAA,MAAM,EAAA;AAAd,CAA9B","sourcesContent":["import { Effect } from \"../../Materials/effect\";\n\nlet name = 'pbrBlockNormalGeometric';\nlet shader = `vec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\n#ifdef NORMAL\nvec3 normalW=normalize(vNormalW);\n#else\nvec3 normalW=normalize(cross(dFdx(vPositionW),dFdy(vPositionW)))*vEyePosition.w;\n#endif\nvec3 geometricNormalW=normalW;\n#if defined(TWOSIDEDLIGHTING) && defined(NORMAL)\ngeometricNormalW=gl_FrontFacing ? geometricNormalW : -geometricNormalW;\n#endif\n`;\n\nEffect.IncludesShadersStore[name] = shader;\n/** @hidden */\nexport var pbrBlockNormalGeometric = { name, shader };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}