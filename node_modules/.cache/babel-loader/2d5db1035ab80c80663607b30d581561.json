{"ast":null,"code":"import { Engine } from \"../../Engines/engine\";\n/** @hidden */\n\nexport var _forceTransformFeedbackToBundle = true;\n\nEngine.prototype.createTransformFeedback = function () {\n  return this._gl.createTransformFeedback();\n};\n\nEngine.prototype.deleteTransformFeedback = function (value) {\n  this._gl.deleteTransformFeedback(value);\n};\n\nEngine.prototype.bindTransformFeedback = function (value) {\n  this._gl.bindTransformFeedback(this._gl.TRANSFORM_FEEDBACK, value);\n};\n\nEngine.prototype.beginTransformFeedback = function (usePoints) {\n  if (usePoints === void 0) {\n    usePoints = true;\n  }\n\n  this._gl.beginTransformFeedback(usePoints ? this._gl.POINTS : this._gl.TRIANGLES);\n};\n\nEngine.prototype.endTransformFeedback = function () {\n  this._gl.endTransformFeedback();\n};\n\nEngine.prototype.setTranformFeedbackVaryings = function (program, value) {\n  this._gl.transformFeedbackVaryings(program, value, this._gl.INTERLEAVED_ATTRIBS);\n};\n\nEngine.prototype.bindTransformFeedbackBuffer = function (value) {\n  this._gl.bindBufferBase(this._gl.TRANSFORM_FEEDBACK_BUFFER, 0, value ? value.underlyingResource : null);\n};","map":{"version":3,"sources":["../../../../sourceES6/core/Engines/Extensions/engine.transformFeedback.ts"],"names":[],"mappings":"AACA,SAAS,MAAT,QAAuB,sBAAvB;AAGA;;AACA,OAAO,IAAI,+BAA+B,GAAG,IAAtC;;AAiDP,MAAM,CAAC,SAAP,CAAiB,uBAAjB,GAA2C,YAAA;AACvC,SAAO,KAAK,GAAL,CAAS,uBAAT,EAAP;AACH,CAFD;;AAIA,MAAM,CAAC,SAAP,CAAiB,uBAAjB,GAA2C,UAAS,KAAT,EAAsC;AAC7E,OAAK,GAAL,CAAS,uBAAT,CAAiC,KAAjC;AACH,CAFD;;AAIA,MAAM,CAAC,SAAP,CAAiB,qBAAjB,GAAyC,UAAS,KAAT,EAAgD;AACrF,OAAK,GAAL,CAAS,qBAAT,CAA+B,KAAK,GAAL,CAAS,kBAAxC,EAA4D,KAA5D;AACH,CAFD;;AAIA,MAAM,CAAC,SAAP,CAAiB,sBAAjB,GAA0C,UAAS,SAAT,EAAkC;AAAzB,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,IAAA;AAAyB;;AACxE,OAAK,GAAL,CAAS,sBAAT,CAAgC,SAAS,GAAG,KAAK,GAAL,CAAS,MAAZ,GAAqB,KAAK,GAAL,CAAS,SAAvE;AACH,CAFD;;AAIA,MAAM,CAAC,SAAP,CAAiB,oBAAjB,GAAwC,YAAA;AACpC,OAAK,GAAL,CAAS,oBAAT;AACH,CAFD;;AAIA,MAAM,CAAC,SAAP,CAAiB,2BAAjB,GAA+C,UAAS,OAAT,EAAgC,KAAhC,EAA+C;AAC1F,OAAK,GAAL,CAAS,yBAAT,CAAmC,OAAnC,EAA4C,KAA5C,EAAmD,KAAK,GAAL,CAAS,mBAA5D;AACH,CAFD;;AAIA,MAAM,CAAC,SAAP,CAAiB,2BAAjB,GAA+C,UAAS,KAAT,EAAoC;AAC/E,OAAK,GAAL,CAAS,cAAT,CAAwB,KAAK,GAAL,CAAS,yBAAjC,EAA4D,CAA5D,EAA+D,KAAK,GAAG,KAAK,CAAC,kBAAT,GAA8B,IAAlG;AACH,CAFD","sourcesContent":["import { Nullable } from \"../../types\";\r\nimport { Engine } from \"../../Engines/engine\";\r\nimport { DataBuffer } from '../../Meshes/dataBuffer';\r\n\r\n/** @hidden */\r\nexport var _forceTransformFeedbackToBundle = true;\r\n\r\ndeclare module \"../../Engines/engine\" {\r\n    export interface Engine {\r\n        /**\r\n         * Creates a webGL transform feedback object\r\n         * Please makes sure to check webGLVersion property to check if you are running webGL 2+\r\n         * @returns the webGL transform feedback object\r\n         */\r\n        createTransformFeedback(): WebGLTransformFeedback;\r\n\r\n        /**\r\n         * Delete a webGL transform feedback object\r\n         * @param value defines the webGL transform feedback object to delete\r\n         */\r\n        deleteTransformFeedback(value: WebGLTransformFeedback): void;\r\n\r\n        /**\r\n         * Bind a webGL transform feedback object to the webgl context\r\n         * @param value defines the webGL transform feedback object to bind\r\n         */\r\n        bindTransformFeedback(value: Nullable<WebGLTransformFeedback>): void;\r\n\r\n        /**\r\n         * Begins a transform feedback operation\r\n         * @param usePoints defines if points or triangles must be used\r\n         */\r\n        beginTransformFeedback(usePoints: boolean): void;\r\n\r\n        /**\r\n         * Ends a transform feedback operation\r\n         */\r\n        endTransformFeedback(): void;\r\n\r\n        /**\r\n         * Specify the varyings to use with transform feedback\r\n         * @param program defines the associated webGL program\r\n         * @param value defines the list of strings representing the varying names\r\n         */\r\n        setTranformFeedbackVaryings(program: WebGLProgram, value: string[]): void;\r\n\r\n        /**\r\n         * Bind a webGL buffer for a transform feedback operation\r\n         * @param value defines the webGL buffer to bind\r\n         */\r\n        bindTransformFeedbackBuffer(value: Nullable<DataBuffer>): void;\r\n    }\r\n}\r\n\r\nEngine.prototype.createTransformFeedback = function(): WebGLTransformFeedback {\r\n    return this._gl.createTransformFeedback();\r\n};\r\n\r\nEngine.prototype.deleteTransformFeedback = function(value: WebGLTransformFeedback): void {\r\n    this._gl.deleteTransformFeedback(value);\r\n};\r\n\r\nEngine.prototype.bindTransformFeedback = function(value: Nullable<WebGLTransformFeedback>): void {\r\n    this._gl.bindTransformFeedback(this._gl.TRANSFORM_FEEDBACK, value);\r\n};\r\n\r\nEngine.prototype.beginTransformFeedback = function(usePoints: boolean = true): void {\r\n    this._gl.beginTransformFeedback(usePoints ? this._gl.POINTS : this._gl.TRIANGLES);\r\n};\r\n\r\nEngine.prototype.endTransformFeedback = function(): void {\r\n    this._gl.endTransformFeedback();\r\n};\r\n\r\nEngine.prototype.setTranformFeedbackVaryings = function(program: WebGLProgram, value: string[]): void {\r\n    this._gl.transformFeedbackVaryings(program, value, this._gl.INTERLEAVED_ATTRIBS);\r\n};\r\n\r\nEngine.prototype.bindTransformFeedbackBuffer = function(value: Nullable<DataBuffer>): void {\r\n    this._gl.bindBufferBase(this._gl.TRANSFORM_FEEDBACK_BUFFER, 0, value ? value.underlyingResource : null);\r\n};\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}