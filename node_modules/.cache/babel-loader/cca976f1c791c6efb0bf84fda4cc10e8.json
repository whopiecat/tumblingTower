{"ast":null,"code":"/**\r\n * Class used to represent data loading progression\r\n */\nvar SceneLoaderFlags =\n/** @class */\nfunction () {\n  function SceneLoaderFlags() {}\n\n  Object.defineProperty(SceneLoaderFlags, \"ForceFullSceneLoadingForIncremental\", {\n    /**\r\n     * Gets or sets a boolean indicating if entire scene must be loaded even if scene contains incremental data\r\n     */\n    get: function () {\n      return SceneLoaderFlags._ForceFullSceneLoadingForIncremental;\n    },\n    set: function (value) {\n      SceneLoaderFlags._ForceFullSceneLoadingForIncremental = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SceneLoaderFlags, \"ShowLoadingScreen\", {\n    /**\r\n     * Gets or sets a boolean indicating if loading screen must be displayed while loading a scene\r\n     */\n    get: function () {\n      return SceneLoaderFlags._ShowLoadingScreen;\n    },\n    set: function (value) {\n      SceneLoaderFlags._ShowLoadingScreen = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SceneLoaderFlags, \"loggingLevel\", {\n    /**\r\n     * Defines the current logging level (while loading the scene)\r\n     * @ignorenaming\r\n     */\n    get: function () {\n      return SceneLoaderFlags._loggingLevel;\n    },\n    set: function (value) {\n      SceneLoaderFlags._loggingLevel = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SceneLoaderFlags, \"CleanBoneMatrixWeights\", {\n    /**\r\n     * Gets or set a boolean indicating if matrix weights must be cleaned upon loading\r\n     */\n    get: function () {\n      return SceneLoaderFlags._CleanBoneMatrixWeights;\n    },\n    set: function (value) {\n      SceneLoaderFlags._CleanBoneMatrixWeights = value;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Flags\n\n  SceneLoaderFlags._ForceFullSceneLoadingForIncremental = false;\n  SceneLoaderFlags._ShowLoadingScreen = true;\n  SceneLoaderFlags._CleanBoneMatrixWeights = false;\n  SceneLoaderFlags._loggingLevel = 0;\n  return SceneLoaderFlags;\n}();\n\nexport { SceneLoaderFlags };","map":{"version":3,"sources":["../../../sourceES6/core/Loading/sceneLoaderFlags.ts"],"names":[],"mappings":"AAEA;;;AAGA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,gBAAA,GAAA,CAmDC;;AAzCG,EAAA,MAAA,CAAA,cAAA,CAAkB,gBAAlB,EAAkB,qCAAlB,EAAqD;AAHrD;;;SAGA,YAAA;AACI,aAAO,gBAAgB,CAAC,oCAAxB;AACH,KAFoD;SAIrD,UAAsD,KAAtD,EAAoE;AAChE,MAAA,gBAAgB,CAAC,oCAAjB,GAAwD,KAAxD;AACH,KANoD;qBAAA;;AAAA,GAArD;AAWA,EAAA,MAAA,CAAA,cAAA,CAAkB,gBAAlB,EAAkB,mBAAlB,EAAmC;AAHnC;;;SAGA,YAAA;AACI,aAAO,gBAAgB,CAAC,kBAAxB;AACH,KAFkC;SAInC,UAAoC,KAApC,EAAkD;AAC9C,MAAA,gBAAgB,CAAC,kBAAjB,GAAsC,KAAtC;AACH,KANkC;qBAAA;;AAAA,GAAnC;AAYA,EAAA,MAAA,CAAA,cAAA,CAAkB,gBAAlB,EAAkB,cAAlB,EAA8B;AAJ9B;;;;SAIA,YAAA;AACI,aAAO,gBAAgB,CAAC,aAAxB;AACH,KAF6B;SAI9B,UAA+B,KAA/B,EAA4C;AACxC,MAAA,gBAAgB,CAAC,aAAjB,GAAiC,KAAjC;AACH,KAN6B;qBAAA;;AAAA,GAA9B;AAWA,EAAA,MAAA,CAAA,cAAA,CAAkB,gBAAlB,EAAkB,wBAAlB,EAAwC;AAHxC;;;SAGA,YAAA;AACI,aAAO,gBAAgB,CAAC,uBAAxB;AACH,KAFuC;SAIxC,UAAyC,KAAzC,EAAuD;AACnD,MAAA,gBAAgB,CAAC,uBAAjB,GAA2C,KAA3C;AACH,KANuC;qBAAA;;AAAA,GAAxC,EA5CJ,CACI;;AACe,EAAA,gBAAA,CAAA,oCAAA,GAAuC,KAAvC;AACA,EAAA,gBAAA,CAAA,kBAAA,GAAqB,IAArB;AACA,EAAA,gBAAA,CAAA,uBAAA,GAA0B,KAA1B;AACA,EAAA,gBAAA,CAAA,aAAA,GAAgB,CAAhB;AA8CnB,SAAA,gBAAA;AAAC,CAnDD,EAAA;;SAAa,gB","sourcesContent":["\r\n\r\n/**\r\n * Class used to represent data loading progression\r\n */\r\nexport class SceneLoaderFlags {\r\n    // Flags\r\n    private static _ForceFullSceneLoadingForIncremental = false;\r\n    private static _ShowLoadingScreen = true;\r\n    private static _CleanBoneMatrixWeights = false;\r\n    private static _loggingLevel = 0;\r\n\r\n    /**\r\n     * Gets or sets a boolean indicating if entire scene must be loaded even if scene contains incremental data\r\n     */\r\n    public static get ForceFullSceneLoadingForIncremental() {\r\n        return SceneLoaderFlags._ForceFullSceneLoadingForIncremental;\r\n    }\r\n\r\n    public static set ForceFullSceneLoadingForIncremental(value: boolean) {\r\n        SceneLoaderFlags._ForceFullSceneLoadingForIncremental = value;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a boolean indicating if loading screen must be displayed while loading a scene\r\n     */\r\n    public static get ShowLoadingScreen(): boolean {\r\n        return SceneLoaderFlags._ShowLoadingScreen;\r\n    }\r\n\r\n    public static set ShowLoadingScreen(value: boolean) {\r\n        SceneLoaderFlags._ShowLoadingScreen = value;\r\n    }\r\n\r\n    /**\r\n     * Defines the current logging level (while loading the scene)\r\n     * @ignorenaming\r\n     */\r\n    public static get loggingLevel(): number {\r\n        return SceneLoaderFlags._loggingLevel;\r\n    }\r\n\r\n    public static set loggingLevel(value: number) {\r\n        SceneLoaderFlags._loggingLevel = value;\r\n    }\r\n\r\n    /**\r\n     * Gets or set a boolean indicating if matrix weights must be cleaned upon loading\r\n     */\r\n    public static get CleanBoneMatrixWeights(): boolean {\r\n        return SceneLoaderFlags._CleanBoneMatrixWeights;\r\n    }\r\n\r\n    public static set CleanBoneMatrixWeights(value: boolean) {\r\n        SceneLoaderFlags._CleanBoneMatrixWeights = value;\r\n    }\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}