{"ast":null,"code":"/**\r\n * Helper class used to generate a canvas to manipulate images\r\n */\nvar CanvasGenerator =\n/** @class */\nfunction () {\n  function CanvasGenerator() {}\n  /**\r\n   * Create a new canvas (or offscreen canvas depending on the context)\r\n   * @param width defines the expected width\r\n   * @param height defines the expected height\r\n   * @return a new canvas or offscreen canvas\r\n   */\n\n\n  CanvasGenerator.CreateCanvas = function (width, height) {\n    if (typeof document === \"undefined\") {\n      return new OffscreenCanvas(width, height);\n    }\n\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  };\n\n  return CanvasGenerator;\n}();\n\nexport { CanvasGenerator };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/canvasGenerator.ts"],"names":[],"mappings":"AAAA;;;AAGA,IAAA,eAAA;AAAA;AAAA,YAAA;AAAA,WAAA,eAAA,GAAA,CAkBC;AAjBG;;;;;;;;AAMc,EAAA,eAAA,CAAA,YAAA,GAAd,UAA2B,KAA3B,EAA0C,MAA1C,EAAwD;AACpD,QAAI,OAAO,QAAP,KAAoB,WAAxB,EAAqC;AACjC,aAAO,IAAI,eAAJ,CAAoB,KAApB,EAA2B,MAA3B,CAAP;AACH;;AAED,QAAI,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAb;AACA,IAAA,MAAM,CAAC,KAAP,GAAe,KAAf;AACA,IAAA,MAAM,CAAC,MAAP,GAAgB,MAAhB;AAEA,WAAO,MAAP;AACH,GAVa;;AAWlB,SAAA,eAAA;AAAC,CAlBD,EAAA","sourcesContent":["/**\r\n * Helper class used to generate a canvas to manipulate images\r\n */\r\nexport class CanvasGenerator {\r\n    /**\r\n     * Create a new canvas (or offscreen canvas depending on the context)\r\n     * @param width defines the expected width\r\n     * @param height defines the expected height\r\n     * @return a new canvas or offscreen canvas\r\n     */\r\n    public static CreateCanvas(width: number, height: number): HTMLCanvasElement | OffscreenCanvas {\r\n        if (typeof document === \"undefined\") {\r\n            return new OffscreenCanvas(width, height);\r\n        }\r\n\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        return canvas;\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}