{"ast":null,"code":"/**\r\n * Class for storing data to local storage if available or in-memory storage otherwise\r\n */\nvar DataStorage =\n/** @class */\nfunction () {\n  function DataStorage() {}\n\n  DataStorage._GetStorage = function () {\n    try {\n      localStorage.setItem(\"test\", \"\");\n      localStorage.removeItem(\"test\");\n      return localStorage;\n    } catch (_a) {\n      var inMemoryStorage_1 = {};\n      return {\n        getItem: function (key) {\n          var value = inMemoryStorage_1[key];\n          return value === undefined ? null : value;\n        },\n        setItem: function (key, value) {\n          inMemoryStorage_1[key] = value;\n        }\n      };\n    }\n  };\n  /**\r\n   * Reads a string from the data storage\r\n   * @param key The key to read\r\n   * @param defaultValue The value if the key doesn't exist\r\n   * @returns The string value\r\n   */\n\n\n  DataStorage.ReadString = function (key, defaultValue) {\n    var value = this._Storage.getItem(key);\n\n    return value !== null ? value : defaultValue;\n  };\n  /**\r\n   * Writes a string to the data storage\r\n   * @param key The key to write\r\n   * @param value The value to write\r\n   */\n\n\n  DataStorage.WriteString = function (key, value) {\n    this._Storage.setItem(key, value);\n  };\n  /**\r\n   * Reads a boolean from the data storage\r\n   * @param key The key to read\r\n   * @param defaultValue The value if the key doesn't exist\r\n   * @returns The boolean value\r\n   */\n\n\n  DataStorage.ReadBoolean = function (key, defaultValue) {\n    var value = this._Storage.getItem(key);\n\n    return value !== null ? value === \"true\" : defaultValue;\n  };\n  /**\r\n   * Writes a boolean to the data storage\r\n   * @param key The key to write\r\n   * @param value The value to write\r\n   */\n\n\n  DataStorage.WriteBoolean = function (key, value) {\n    this._Storage.setItem(key, value ? \"true\" : \"false\");\n  };\n  /**\r\n   * Reads a number from the data storage\r\n   * @param key The key to read\r\n   * @param defaultValue The value if the key doesn't exist\r\n   * @returns The number value\r\n   */\n\n\n  DataStorage.ReadNumber = function (key, defaultValue) {\n    var value = this._Storage.getItem(key);\n\n    return value !== null ? parseFloat(value) : defaultValue;\n  };\n  /**\r\n   * Writes a number to the data storage\r\n   * @param key The key to write\r\n   * @param value The value to write\r\n   */\n\n\n  DataStorage.WriteNumber = function (key, value) {\n    this._Storage.setItem(key, value.toString());\n  };\n\n  DataStorage._Storage = DataStorage._GetStorage();\n  return DataStorage;\n}();\n\nexport { DataStorage };","map":{"version":3,"sources":["../../../sourceES6/core/Misc/dataStorage.ts"],"names":[],"mappings":"AAKA;;;AAGA,IAAA,WAAA;AAAA;AAAA,YAAA;AAAA,WAAA,WAAA,GAAA,CAkFC;;AA/EkB,EAAA,WAAA,CAAA,WAAA,GAAf,YAAA;AACI,QAAI;AACA,MAAA,YAAY,CAAC,OAAb,CAAqB,MAArB,EAA6B,EAA7B;AACA,MAAA,YAAY,CAAC,UAAb,CAAwB,MAAxB;AACA,aAAO,YAAP;AACH,KAJD,CAKA,OAAA,EAAA,EAAM;AACF,UAAM,iBAAe,GAA8B,EAAnD;AACA,aAAO;AACH,QAAA,OAAO,EAAE,UAAC,GAAD,EAAI;AACT,cAAM,KAAK,GAAG,iBAAe,CAAC,GAAD,CAA7B;AACA,iBAAO,KAAK,KAAK,SAAV,GAAsB,IAAtB,GAA6B,KAApC;AACH,SAJE;AAKH,QAAA,OAAO,EAAE,UAAC,GAAD,EAAM,KAAN,EAAW;AAChB,UAAA,iBAAe,CAAC,GAAD,CAAf,GAAuB,KAAvB;AACH;AAPE,OAAP;AASH;AACJ,GAlBc;AAoBf;;;;;;;;AAMc,EAAA,WAAA,CAAA,UAAA,GAAd,UAAyB,GAAzB,EAAsC,YAAtC,EAA0D;AACtD,QAAM,KAAK,GAAG,KAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB,CAAd;;AACA,WAAQ,KAAK,KAAK,IAAV,GAAiB,KAAjB,GAAyB,YAAjC;AACH,GAHa;AAKd;;;;;;;AAKc,EAAA,WAAA,CAAA,WAAA,GAAd,UAA0B,GAA1B,EAAuC,KAAvC,EAAoD;AAChD,SAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB,EAA2B,KAA3B;AACH,GAFa;AAId;;;;;;;;AAMc,EAAA,WAAA,CAAA,WAAA,GAAd,UAA0B,GAA1B,EAAuC,YAAvC,EAA4D;AACxD,QAAM,KAAK,GAAG,KAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB,CAAd;;AACA,WAAQ,KAAK,KAAK,IAAV,GAAkB,KAAK,KAAK,MAA5B,GAAsC,YAA9C;AACH,GAHa;AAKd;;;;;;;AAKc,EAAA,WAAA,CAAA,YAAA,GAAd,UAA2B,GAA3B,EAAwC,KAAxC,EAAsD;AAClD,SAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB,EAA2B,KAAK,GAAG,MAAH,GAAY,OAA5C;AACH,GAFa;AAId;;;;;;;;AAMc,EAAA,WAAA,CAAA,UAAA,GAAd,UAAyB,GAAzB,EAAsC,YAAtC,EAA0D;AACtD,QAAM,KAAK,GAAG,KAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB,CAAd;;AACA,WAAQ,KAAK,KAAK,IAAV,GAAiB,UAAU,CAAC,KAAD,CAA3B,GAAqC,YAA7C;AACH,GAHa;AAKd;;;;;;;AAKc,EAAA,WAAA,CAAA,WAAA,GAAd,UAA0B,GAA1B,EAAuC,KAAvC,EAAoD;AAChD,SAAK,QAAL,CAAc,OAAd,CAAsB,GAAtB,EAA2B,KAAK,CAAC,QAAN,EAA3B;AACH,GAFa;;AA9EC,EAAA,WAAA,CAAA,QAAA,GAAqB,WAAW,CAAC,WAAZ,EAArB;AAiFnB,SAAA,WAAA;AAAC,CAlFD,EAAA;;SAAa,W","sourcesContent":["interface IStorage {\r\n    getItem: (key: string) => string | null;\r\n    setItem: (key: string, value: string) => void;\r\n}\r\n\r\n/**\r\n * Class for storing data to local storage if available or in-memory storage otherwise\r\n */\r\nexport class DataStorage {\r\n    private static _Storage: IStorage = DataStorage._GetStorage();\r\n\r\n    private static _GetStorage(): IStorage {\r\n        try {\r\n            localStorage.setItem(\"test\", \"\");\r\n            localStorage.removeItem(\"test\");\r\n            return localStorage;\r\n        }\r\n        catch {\r\n            const inMemoryStorage: { [key: string]: string } = {};\r\n            return {\r\n                getItem: (key) => {\r\n                    const value = inMemoryStorage[key];\r\n                    return value === undefined ? null : value;\r\n                },\r\n                setItem: (key, value) => {\r\n                    inMemoryStorage[key] = value;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reads a string from the data storage\r\n     * @param key The key to read\r\n     * @param defaultValue The value if the key doesn't exist\r\n     * @returns The string value\r\n     */\r\n    public static ReadString(key: string, defaultValue: string): string {\r\n        const value = this._Storage.getItem(key);\r\n        return (value !== null ? value : defaultValue);\r\n    }\r\n\r\n    /**\r\n     * Writes a string to the data storage\r\n     * @param key The key to write\r\n     * @param value The value to write\r\n     */\r\n    public static WriteString(key: string, value: string): void {\r\n        this._Storage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * Reads a boolean from the data storage\r\n     * @param key The key to read\r\n     * @param defaultValue The value if the key doesn't exist\r\n     * @returns The boolean value\r\n     */\r\n    public static ReadBoolean(key: string, defaultValue: boolean): boolean {\r\n        const value = this._Storage.getItem(key);\r\n        return (value !== null ? (value === \"true\") : defaultValue);\r\n    }\r\n\r\n    /**\r\n     * Writes a boolean to the data storage\r\n     * @param key The key to write\r\n     * @param value The value to write\r\n     */\r\n    public static WriteBoolean(key: string, value: boolean) {\r\n        this._Storage.setItem(key, value ? \"true\" : \"false\");\r\n    }\r\n\r\n    /**\r\n     * Reads a number from the data storage\r\n     * @param key The key to read\r\n     * @param defaultValue The value if the key doesn't exist\r\n     * @returns The number value\r\n     */\r\n    public static ReadNumber(key: string, defaultValue: number): number {\r\n        const value = this._Storage.getItem(key);\r\n        return (value !== null ? parseFloat(value) : defaultValue);\r\n    }\r\n\r\n    /**\r\n     * Writes a number to the data storage\r\n     * @param key The key to write\r\n     * @param value The value to write\r\n     */\r\n    public static WriteNumber(key: string, value: number) {\r\n        this._Storage.setItem(key, value.toString());\r\n    }\r\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}